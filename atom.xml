<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>저장하고 까먹자</title>
  
  
  <link href="https://jungguji.github.io/atom.xml" rel="self"/>
  
  <link href="https://jungguji.github.io/"/>
  <updated>2020-11-18T08:50:57.000Z</updated>
  <id>https://jungguji.github.io/</id>
  
  <author>
    <name>Junggu Ji</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>프로세스와 스레드</title>
    <link href="https://jungguji.github.io/2020/11/18/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C/"/>
    <id>https://jungguji.github.io/2020/11/18/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C/</id>
    <published>2020-11-18T08:50:57.000Z</published>
    <updated>2020-11-18T08:50:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><ul><li>프로세스(Process)란 메모리 위에 올라와서 실행 중인 프로그램으로 각각의 프로세스는 모두 독립적인 상태이고 Os로부터 자원을 할당 받은 작업의 단위.</li><li>스레드(Thread)란 프로세스 내에서 실행되는 작업의 수행 단위로 각각의 스레드는 프로세스가 할당받은 자원을 이용하면서 스레드간 메모리를 공유하며 작동한다.</li></ul><hr><h2 id="작동-방식"><a href="#작동-방식" class="headerlink" title="작동 방식"></a>작동 방식</h2><h3 id="프로세스"><a href="#프로세스" class="headerlink" title="프로세스"></a>프로세스</h3><p><img src="source_posts%5C%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C%5Cprocess.png" alt="OS에서 자원을 할당받은 프로세스들 (이미지 출처: https://gmlwjd9405.github.io/2018/09/14/process-vs-thread.html)"></p><ul><li>프로세스는 OS로부터 Code, Data, Stack, Heap으로 이루어진 독립된 메모리 영역을 할당 받는다.</li><li>각각 독립된 영역을 할당 받으므로 기본적으로 프로세스들 간에는 다른 프로세스의 변수나, 자료구조에 접근 할 수 없으며 서로 간 통신을 위해선 커널 영역에 IPC를 이용해 프로세스간 통신을 할 수 있다.</li></ul><h3 id="프로세스-내-메모리-구조"><a href="#프로세스-내-메모리-구조" class="headerlink" title="프로세스 내 메모리 구조"></a>프로세스 내 메모리 구조</h3><ol><li>Code 영역 : 프로그램에서 수행 할 코드가 로딩 되는 메모리</li><li>Data 영역 : 프로그램이 실행 될 때 생성되고, 종료 될 때 시스템에 반환되며 BBS와 Data영역으로 나뉘는데 BBS엔 초기화 되지 않은 변수를 위한 영역이고, Data는 초기화된 데이터를 저장하는 메모리이다.</li><li>Heap 영역 : 프로그램이 실행되는 동안 필요에 의해 동적으로 사요되는 메모리 영역으로 대표적으로 C언어의 malloc함수를 이용해 메모리를 할당한다면 이 영역에 할당되고 Java의 Object 타입들은 heap 영역에 생성된다.</li><li>Stack 영역 : 프로그램이 자동으로 사용하는 임시 메모리 영역으로 지연벽수, 파라미터, 리턴 값 등 잠시 사용됐다가 사라지는 데이터를 저장하는 영역으로 함수 호출 시 생성되고 함수가 끝나면 반환된다. 예로 메서드 내에서 선언한 지역 변수는 Stack 영역에 저장되기 때문에 메서드가 끝날 때 함께 사라지므로 다른 메서드에서 호출 할 수 없다.</li></ol><h3 id="스레드"><a href="#스레드" class="headerlink" title="스레드"></a>스레드</h3><p><img src="/process.png" alt="프로세스에서 자원을 할당받은 스레드들 (이미지 출처: https://gmlwjd9405.github.io/2018/09/14/process-vs-thread.html)"></p><ul><li>스레드는 프로세스 내부에 존재하고 Stack 영역만 각 스레드마다 독립적으로 할당 받고 그 외에 프로세스 영역에 있는 code, data, heap 영역은 프로세스 내에 있는 스레드 끼리 공유한다.</li><li>때문에 한 스레드에서 공유된 영역의 자원을 수정한다면 다른 스레드에서 그 자원을 사용 할 때 변경된 자원을 사용하게 되고</li><li>결국 개발자가 자원을 동기적으로 사용 할 수 있도록 처리 할 수 있어야 한다.</li><li>프로세스 내 자원을 함께 공유하기 때문에 모든 자원을 각각 독립되게 할당 받은 프로세스와 달리 같은 프로세스 내의 스레드가 문제가 생긴다면 다른 스레드들도 강제로 종료되게 된다.</li></ul><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://www.yalco.kr/14_process_thread/">https://www.yalco.kr/14_process_thread/</a></li><li><a href="https://gmlwjd9405.github.io/2018/09/14/process-vs-thread.html">https://gmlwjd9405.github.io/2018/09/14/process-vs-thread.html</a></li><li><a href="https://velog.io/@raejoonee/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4">https://velog.io/@raejoonee/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EC%8A%A4%EB%A0%88%EB%93%9C%EC%9D%98-%EC%B0%A8%EC%9D%B4</a></li><li><a href="https://recorda.tistory.com/entry/20160503%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0">https://recorda.tistory.com/entry/20160503%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0</a></li><li><a href="https://ehpub.co.kr/54-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0/">https://ehpub.co.kr/54-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;결론&quot;&gt;&lt;a href=&quot;#결론&quot; class=&quot;headerlink&quot; title=&quot;결론&quot;&gt;&lt;/a&gt;결론&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;프로세스(Process)란 메모리 위에 올라와서 실행 중인 프로그램으로 각각의 프로세스는 모두 독립적인 상태이고 O</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Synchronous, Asynchronous와 Blocking, Non-Blocking</title>
    <link href="https://jungguji.github.io/2020/11/16/Synchronous-Asynchronous%EC%99%80-Blocking-Non-Blocking/"/>
    <id>https://jungguji.github.io/2020/11/16/Synchronous-Asynchronous%EC%99%80-Blocking-Non-Blocking/</id>
    <published>2020-11-16T13:47:28.000Z</published>
    <updated>2020-11-18T08:50:34.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><ul><li>Synchronous, Asynchronous 는 두 개 이상의 대상에 대한 시간 을 관리하는 방법이고</li><li>Blocking, Non-Blocking 은 직접 제어 할 수 없는 대상을 처리하는 방법에 대한 것이다.</li></ul><h3 id="Synchronous-Asynchronous"><a href="#Synchronous-Asynchronous" class="headerlink" title="Synchronous, Asynchronous"></a>Synchronous, Asynchronous</h3><ul><li>두 개 이상의 대상들의 시간을 처리하는 방식</li><li>Synchronous는 두 개 이상의 대상들의 시간을 일치 시키는 것 으로 메서드가 종료되는 시간과 결과를 전달받은 시간이 일치하면 Synchronous(동기) 방식이다.</li><li>Asynchronous는 두 개 이상의 대상들의 시간을 일치 시키자 않는 것 으로 메서드가 종료되는 시간과 결과를 전달받은 시간이 일치하지 않으면 Asynchronous(비동기) 방식이다.</li></ul><h3 id="Blocking-Non-Blocking"><a href="#Blocking-Non-Blocking" class="headerlink" title="Blocking, Non-Blocking"></a>Blocking, Non-Blocking</h3><ul><li>직접 제어 할 수 없는 대상에 대한 처리 방식</li><li>Blocking은 직접 제어 할 수 없는 대상이 작업이 끝날 떄 까지 <strong>제어권을 넘기지 않아 작업이 끝날 떄 까지 대기</strong> 하는 방식이다.</li><li>Non-Blocking은 직접 제어 할 수 없는 대상의 작업의 종료와 관계없이 <strong>제어권을 바로 다시 얻어와 다른 일을 할 수 있게</strong> 하는 방식이다.</li></ul><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="Synchronous"><a href="#Synchronous" class="headerlink" title="Synchronous"></a>Synchronous</h3><p>우선 Synchronous의 뜻을 사전에선 아래와 같이 정의하고 있다.</p><blockquote><p>동시 발생하는</p><footer><strong>네이버 어학사전</strong></footer></blockquote><p>이 처럼 두 개 이상의 작업을 동시에 발생시키거나 동시에 종료시키는 행동을 말한다.</p><p>동기 방식을 사용 할 경우 메서드를 호출 했을 때 결과를 호출한 쪽에서 스스로 확인하고 처리하기 떄문에 결과를 처리 할 때까지 기다렸다가 결과를 전달받고 메서드를 종료 시킨다.</p><p>간단히 요약하면 메서드를 호출하면 그 메서드가 종료되는 시간과 결과가 return 되는 시간이 같다는 것으로 메서드가 종료되는 시간과 결과가 return 되는 시간이 같으므로 동기 방식이라 말한다.</p><p>혹은 2개 이상의 일을 각각 실행시켜 A가 끝나는 시간과 B가 시작하는 시간이 같은 경우도 마찬가지로 동기 방식이라고 할 수 있다.</p><p>Java로 예를 들면 쓰레드를 동기 시키기 위해 사용하는 <a href="https://www.javamex.com/tutorials/synchronization_concurrency_synchronized1.shtml">synchronized</a>가 있고 이;일반적으로는 일부러 설정하지 않는 한 보통의 메서드 호출은 모두 동기 방식으로 사용된다.</p><h3 id="Asynchronous"><a href="#Asynchronous" class="headerlink" title="Asynchronous"></a>Asynchronous</h3><p>Asynchronous 비동기 방식은 부정형 접두사 A를 붙여서 두 개 이상의 대상의 시간을 일치 시키지 않는 방식으로 동기 방식과 반대로 동작한다.</p><p>즉 메서드를 호출 했을 때 결과가 리턴되지 않더라도 다른 작업을 수행하거나 메서드를 종료하고 나중에 처리되면 그 때 결과물을 가져온다.</p><p>이 때 메서드를 호출한 시간과 리턴 받은 시간이 일치하지 않으므로 이러한 방식을 비동기 방식이라 한다.</p><p>보통 ajax를 통해 많이 사용 해봤을 것이고, Java에선 쓰레드를 활용해 비동기적으로 처리 할 수 있고, Spring에선 <a href="https://www.baeldung.com/spring-async">@Async Annotation</a>을 이용해 비동기 방식을 처리 할 수 있다.</p><h3 id="Blocking"><a href="#Blocking" class="headerlink" title="Blocking"></a>Blocking</h3><p>결론에서 말한 것 처럼 Blocking은 직접 제어 할 수 없는 대상이 작업이 끝날 때 까지 제어권을 넘기지 않아 작업이 끝날 때 까지 대기하게 하는 방식이다.</p><p>예를 들면 스타크래프트에서 테란의 SCV는 한번 건물을 짓기 시작하면 건설이 끝날 때 까지 다른 동작을 할 수 없으므로, Blocking 상태라고 할 수 있고, Java에선 System.in 같은 I/O 처리를 예로 들 수 있다.</p><h3 id="Non-Blocking"><a href="#Non-Blocking" class="headerlink" title="Non-Blocking"></a>Non-Blocking</h3><p>Blocking과 반대되는 방식으로 작업의 처리 여부와 상관없이 작업을 호출한 쪽이 다시 제어권을 가져와서 자유롭게 다른 일을 처리할 수 있는 방식을 Non-Blocking 방식이라고 한다.</p><p>예를 들어 프로토스의 프로브는 건물을 짓게 하면 차원 균열만 개방하고 바로 미네라를 캐는 등의 다른 일을 수행 할 수 있으므로 프로브는 Non-Blocking 상태라고 할 수 있다.</p><p><img src="source_posts%5CSynchronous-Asynchronous%EC%99%80-Blocking-Non-Blocking%5Cscv.gif" alt="서플라이디포를 건설 하는 동안 다른 행위를 할 수 없는 SCV"></p><p><img src="source_posts%5CSynchronous-Asynchronous%EC%99%80-Blocking-Non-Blocking%5C%ED%94%84%EB%A1%9C%EB%B8%8C.png" alt="첫 번째 파일럿을 소환 후 파일럿이 완성되기 전에 두 번째 파일럿을 소환 할 수 있는 프로브"></p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://velog.io/@codemcd/Sync-VS-Async-Blocking-VS-Non-Blocking-sak6d01fhx">https://velog.io/@codemcd/Sync-VS-Async-Blocking-VS-Non-Blocking-sak6d01fhx</a></li><li><a href="https://www.youtube.com/watch?v=HKlUvCv9hvA&amp;t=806s">https://www.youtube.com/watch?v=HKlUvCv9hvA&amp;t=806s</a></li><li><a href="https://nesoy.github.io/articles/2017-01/Synchronized">https://nesoy.github.io/articles/2017-01/Synchronized</a></li><li><a href="https://homoefficio.github.io/2017/02/19/Blocking-NonBlocking-Synchronous-Asynchronous/">https://homoefficio.github.io/2017/02/19/Blocking-NonBlocking-Synchronous-Asynchronous/</a></li><li><a href="https://www.notion.so/Sync-vs-Async-Block-vs-Non-block-da3e458e74c84201abfd4bcbf2ed00c2">https://www.notion.so/Sync-vs-Async-Block-vs-Non-block-da3e458e74c84201abfd4bcbf2ed00c2</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;결론&quot;&gt;&lt;a href=&quot;#결론&quot; class=&quot;headerlink&quot; title=&quot;결론&quot;&gt;&lt;/a&gt;결론&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Synchronous, Asynchronous 는 두 개 이상의 대상에 대한 시간 을 관리하는 방법이고&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
    <category term="면접 질문" scheme="https://jungguji.github.io/tags/%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8/"/>
    
    <category term="개발" scheme="https://jungguji.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
  </entry>
  
  <entry>
    <title>백준 2751번: 수 정렬하기 2</title>
    <link href="https://jungguji.github.io/2020/11/12/%EB%B0%B1%EC%A4%80-2751%EB%B2%88-%EC%88%98-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-2/"/>
    <id>https://jungguji.github.io/2020/11/12/%EB%B0%B1%EC%A4%80-2751%EB%B2%88-%EC%88%98-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-2/</id>
    <published>2020-11-12T10:10:20.000Z</published>
    <updated>2020-11-12T10:23:24.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/2751">https://www.acmicpc.net/problem/2751</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in))) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> amount = Integer.parseInt(br.readLine());</span><br><span class="line"></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; amount; i++) &#123;</span><br><span class="line">            list.add(Integer.parseInt(br.readLine()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Collections.sort(list);</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : list) &#123;</span><br><span class="line">            sb.append(i).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(sb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Arrays-sort-int-vs-Arrays-sort-Object-and-Collections-sort-List"><a href="#Arrays-sort-int-vs-Arrays-sort-Object-and-Collections-sort-List" class="headerlink" title="Arrays.sort(int[]) vs Arrays.sort(Object[]) and Collections.sort(List)"></a>Arrays.sort(int[]) vs Arrays.sort(Object[]) and Collections.sort(List)</h2><h3 id="Arrays-sort-int"><a href="#Arrays-sort-int" class="headerlink" title="Arrays.sort(int[])"></a>Arrays.sort(int[])</h3><ul><li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#sort-byte:A-">DualPivotQuicksort</a>라는 피벗을 두 개를 정해 구간을 3개로 하는 퀵소트를 사용한다.</li><li>API에 따르면 이 때 평균 O(n log(n)) 성능을 제공하며 일반적으로 기존 (one-pivot) 쿽소트 보다 빠르다고 한다.</li><li>하지만 여전히 최악의 경우 O(n^2)인 것은 여전하다.</li></ul><h3 id="Arrays-sort-Object-and-Collections-sort-List"><a href="#Arrays-sort-Object-and-Collections-sort-List" class="headerlink" title="Arrays.sort(Object[]) and Collections.sort(List)"></a>Arrays.sort(Object[]) and Collections.sort(List)</h3><ul><li>java.util.Arrays.useLegacyMergeSort 설정에 따라 true면 legacyMergeSort를 통해 <a href="https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC">Merge sort</a>로 정렬하고 false면 TimeSort를 통해 <a href="https://en.wikipedia.org/wiki/Timsort">Tim sort</a>로 정렬한다.</li><li>이 때 기본적으로 java.util.Arrays.useLegacyMergeSort 설정은 false로 지정되어 있다.</li><li>Tim sort는 Insertion sort와 Merge sort를 결합하여 만든 정렬로 최선의 경우 O(n), 평균적으로 O(n log(n)), 최악의 경우 O(n log(n))의 성능을 제공한다.</li><li><a href="https://d2.naver.com/helloworld/0315536">Tim sort에 대한 자세한 설명</a></li></ul><h2 id="java-util-Arrays-useLegacyMergeSort-확인"><a href="#java-util-Arrays-useLegacyMergeSort-확인" class="headerlink" title="java.util.Arrays.useLegacyMergeSort 확인"></a>java.util.Arrays.useLegacyMergeSort 확인</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">LegacyMergeSort</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> userRequested =</span><br><span class="line">            java.security.AccessController.doPrivileged(</span><br><span class="line">                <span class="keyword">new</span> sun.security.action.GetBooleanAction(</span><br><span class="line">                    <span class="string">&quot;java.util.Arrays.useLegacyMergeSort&quot;</span>)).booleanValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li>new sun.security.action.GetBooleanAction(“java.util.Arrays.useLegacyMergeSort”)).booleanValue(); 를 sysout으로 출력해보면 false가 return 되는 것을 확인할 수 있다.</li></ul><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="source_posts%5C%EB%B0%B1%EC%A4%80-2751%EB%B2%88-%EC%88%98-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-2%5C%EA%B2%B0%EA%B3%BC.PNG" alt="순서대로 Arrays.sort(int[]), Arrays.sort(Object[]), Collections.sort(List)의 결과"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2751&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>프로그래머스: 방금 그 곡</title>
    <link href="https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%B0%A9%EA%B8%88-%EA%B7%B8-%EA%B3%A1/"/>
    <id>https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%B0%A9%EA%B8%88-%EA%B7%B8-%EA%B3%A1/</id>
    <published>2020-11-12T10:05:46.000Z</published>
    <updated>2020-11-12T10:09:25.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17683">https://programmers.co.kr/learn/courses/30/lessons/17683</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">solution</span><span class="params">(String m, String[] musicinfos)</span> </span>&#123;</span><br><span class="line">    String answer = <span class="string">&quot;(None)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    m = getSharpReplace(m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> maxPlayTime = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (String music : musicinfos) &#123;</span><br><span class="line">        String[] info = music.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> playTimeToMinute = getPlayTime(info[<span class="number">0</span>], info[<span class="number">1</span>]);</span><br><span class="line">        String melody = getMelody(playTimeToMinute, info[<span class="number">3</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (melody.contains(m)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (maxPlayTime &lt; playTimeToMinute) &#123;</span><br><span class="line">                answer = info[<span class="number">2</span>];</span><br><span class="line">                maxPlayTime = playTimeToMinute;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getSharpReplace</span><span class="params">(String arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> arg.replace(<span class="string">&quot;C#&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            .replace(<span class="string">&quot;D#&quot;</span>, <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            .replace(<span class="string">&quot;E#&quot;</span>, <span class="string">&quot;3&quot;</span>)</span><br><span class="line">            .replace(<span class="string">&quot;F#&quot;</span>, <span class="string">&quot;4&quot;</span>)</span><br><span class="line">            .replace(<span class="string">&quot;G#&quot;</span>, <span class="string">&quot;5&quot;</span>)</span><br><span class="line">            .replace(<span class="string">&quot;A#&quot;</span>, <span class="string">&quot;6&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getPlayTime</span><span class="params">(String start, String end)</span> </span>&#123;</span><br><span class="line">    LocalTime startTime = convertLocalTime(start);</span><br><span class="line">    LocalTime endTime = convertLocalTime(end);</span><br><span class="line"></span><br><span class="line">    LocalTime playTime = endTime.minusHours(startTime.getHour()).minusMinutes(startTime.getMinute());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> playTime.getHour() * <span class="number">60</span> + playTime.getMinute();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> LocalTime <span class="title">convertLocalTime</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">    String[] hourAndMinute = time.split(<span class="string">&quot;:&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> LocalTime.of(Integer.parseInt(hourAndMinute[<span class="number">0</span>]), Integer.parseInt(hourAndMinute[<span class="number">1</span>]), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getMelody</span><span class="params">(<span class="keyword">int</span> playtime, String melody)</span> </span>&#123;</span><br><span class="line">    String sharpReplaceMelody = getSharpReplace(melody);</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>[] array = sharpReplaceMelody.toCharArray();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; playtime; i++) &#123;</span><br><span class="line">        sb.append(array[i % sharpReplaceMelody.length()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>“#”이 붙은 음계들을 유일한 값으로 치환한다.</li><li>곡 정보를 담은 musicinfos의 개수만큼 반복한다.</li><li>돌면서 “,”로 잘라 시작시간, 끝난시간, 곡 이름, 멜로디 순으로 구분하여 String array에 저장한다.</li><li>시작 시간과 끝난 시간을 LocalTime type으로 만들어서 끝난 시간에서 시작 시간을 빼서 얼마나 오래 방송 됐는지 playTime을 구한다.</li><li>곡 정보에 있는 멜로디에서도 “#”이 붙은 음계들을 1번에서 한 것과 같은 값으로 치환한다.</li><li>playtime에 따라 멜로디에 음계를 추가하기 위해 멜로디를 char array로 변경한다.</li><li>playtime 만큼 반복하면서 멜로디를 만든다.<ol><li>playtime보다 멜로디가 짧은 경우엔 지금 멜로디에 음계를 이어 붙여 playtime 길이 만큼 만든다.</li><li>멜로디가 더 긴 경우엔 playtime 만큼 자른다.</li></ol></li><li>이렇게 구한 멜로디에 기억 중인 멜로디 m이 포함된다면 playtime이 가장 긴지 확인하고 곡 정보를 저장한다.</li><li>끝.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (1.31ms, 54.1MB)</td></tr><tr><td>테스트 2</td><td>통과 (1.38ms, 52.7MB)</td></tr><tr><td>테스트 3</td><td>통과 (3.19ms, 52.6MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.33ms, 51.7MB)</td></tr><tr><td>테스트 5</td><td>통과 (1.44ms, 52.7MB)</td></tr><tr><td>테스트 6</td><td>통과 (1.42ms, 52.2MB)</td></tr><tr><td>테스트 7</td><td>통과 (2.26ms, 52.7MB)</td></tr><tr><td>테스트 8</td><td>통과 (2.27ms, 53.3MB)</td></tr><tr><td>테스트 9</td><td>통과 (2.38ms, 52.5MB)</td></tr><tr><td>테스트 10</td><td>통과 (2.31ms, 52MB)</td></tr><tr><td>테스트 11</td><td>통과 (2.24ms, 53.4MB)</td></tr><tr><td>테스트 12</td><td>통과 (2.03ms, 53.2MB)</td></tr><tr><td>테스트 13</td><td>통과 (2.27ms, 53.2MB)</td></tr><tr><td>테스트 14</td><td>통과 (2.23ms, 52.2MB)</td></tr><tr><td>테스트 15</td><td>통과 (2.19ms, 53.2MB)</td></tr><tr><td>테스트 16</td><td>통과 (2.22ms, 52.1MB)</td></tr><tr><td>테스트 17</td><td>통과 (1.78ms, 52.4MB)</td></tr><tr><td>테스트 18</td><td>통과 (2.22ms, 53MB)</td></tr><tr><td>테스트 19</td><td>통과 (2.66ms, 52.5MB)</td></tr><tr><td>테스트 20</td><td>통과 (2.42ms, 52.1MB)</td></tr><tr><td>테스트 21</td><td>통과 (2.41ms, 52.3MB)</td></tr><tr><td>테스트 22</td><td>통과 (3.55ms, 52.9MB)</td></tr><tr><td>테스트 23</td><td>통과 (3.94ms, 53.2MB)</td></tr><tr><td>테스트 24</td><td>통과 (2.15ms, 51.9MB)</td></tr><tr><td>테스트 25</td><td>통과 (1.24ms, 52.3MB)</td></tr><tr><td>테스트 26</td><td>통과 (1.30ms, 53.2MB)</td></tr><tr><td>테스트 27</td><td>통과 (1.41ms, 52.6MB)</td></tr><tr><td>테스트 28</td><td>통과 (1.12ms, 53.1MB)</td></tr><tr><td>테스트 29</td><td>통과 (12.67ms, 53.4MB)</td></tr><tr><td>테스트 30</td><td>통과 (13.24ms, 53.1MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="string">&quot;HELLO&quot;</span>, test.solution(<span class="string">&quot;ABCDEFG&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;12:00,12:14,HELLO,CDEFGAB&quot;</span>, <span class="string">&quot;13:00,13:05,WORLD,ABCDEF&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="string">&quot;FOO&quot;</span>, test.solution(<span class="string">&quot;CC#BCC#BCC#BCC#B&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;03:00,03:30,FOO,CC#B&quot;</span>, <span class="string">&quot;04:00,04:08,BAR,CC#BCC#BCC#B&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="string">&quot;WORLD&quot;</span>, test.solution(<span class="string">&quot;ABC&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;12:00,12:14,HELLO,C#DEFGAB&quot;</span>, <span class="string">&quot;13:00,13:05,WORLD,ABCDEF&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="string">&quot;(None)&quot;</span>, test.solution(<span class="string">&quot;CDEFGAC&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;12:00,12:06,HELLO,CDEFGA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="string">&quot;FOO&quot;</span>, test.solution(<span class="string">&quot;CCB&quot;</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;03:00,03:10,FOO,CCB#CCB&quot;</span>, <span class="string">&quot;04:00,04:08,BAR,ABC&quot;</span>&#125;));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17683&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 파일명 정렬</title>
    <link href="https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%8C%8C%EC%9D%BC%EB%AA%85-%EC%A0%95%EB%A0%AC/"/>
    <id>https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%8C%8C%EC%9D%BC%EB%AA%85-%EC%A0%95%EB%A0%AC/</id>
    <published>2020-11-12T09:44:54.000Z</published>
    <updated>2020-11-12T10:06:14.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17686">https://programmers.co.kr/learn/courses/30/lessons/17686</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String[] solution(String[] files) &#123;</span><br><span class="line"></span><br><span class="line">    List&lt;File&gt; fileList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span>[] array = files[i].toCharArray();</span><br><span class="line"></span><br><span class="line">        String originName = files[i];</span><br><span class="line">        String head = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Integer number = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> isString = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> numberStartIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isString &amp;&amp; isNumber(array[j])) &#123;</span><br><span class="line">                head = <span class="keyword">new</span> String(array, <span class="number">0</span>, j).toUpperCase();</span><br><span class="line">                numberStartIndex = j;</span><br><span class="line">                isString = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isString &amp;&amp; !isNumber(array[j])) &#123;</span><br><span class="line">                number = Integer.parseInt(<span class="keyword">new</span> String(array, numberStartIndex, j - numberStartIndex));</span><br><span class="line">                isString = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isString) &#123;</span><br><span class="line">            number = Integer.parseInt(<span class="keyword">new</span> String(array, numberStartIndex, array.length - numberStartIndex));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fileList.add(<span class="keyword">new</span> File(originName, head, number, i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sort(fileList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fileList.stream()</span><br><span class="line">            .map(File::getOriginName)</span><br><span class="line">            .toArray(String[]::<span class="keyword">new</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(List&lt;File&gt; fileList)</span> </span>&#123;</span><br><span class="line">    fileList.sort((f1, f2) -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (f1.head.compareTo(f2.head) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> f1.head.compareTo(f2.head);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f1.number.compareTo(f2.number) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> f1.number.compareTo(f2.number);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> f1.index.compareTo(f2.index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isNumber</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">48</span> &lt;= ch &amp;&amp; ch &lt;= <span class="number">57</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String originName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String head;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer number;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Integer index;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">File</span><span class="params">(String originName, String head, Integer number, Integer index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.originName = originName;</span><br><span class="line">        <span class="keyword">this</span>.head = head;</span><br><span class="line">        <span class="keyword">this</span>.number = number;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getOriginName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.originName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.number;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>file 개수만큼 반복하면서 파일명을 char array로 만든다.</li><li>char array를 숫자가 나올 때 까지 반복한다.</li><li>숫자가 나오면 0부터 숫자가 나온 index까지 짤라서 head 변수에 저장시키고 숫자가 시작된 index와 다음에 숫자인지 체크 할 flag 변수를 false로 변경한다.</li><li>head를 만들고 난 후엔 숫자만 뽑아서 number로 저장해야 하므로</li><li>돌면서 현재 문자가 아니고 지금 값도 숫자가 아니면 지금 index까지 잘라서 number에 저장한다.</li><li>만약 tail이 없어서 이번 조건문에 걸리지 않았다면, 숫자가 시직된 index부터 array 길이에서 숫자가 시작된 index를 뺀 크기 만큼 잘라서 number에 저장한다.</li><li>구한 head, number를 가지고 원래 파일명, head, number, 원래 순서를 갖는 File Object를 생성하고 List에 추가한다.</li><li>리스트를 문제의 제약조건 처럼 정렬한다.<ol><li>head로 비교해서 정렬</li><li>head가 같으면 number로 비교해서 정렬</li><li>둘 다 같으면 원래 순서대로 정렬</li></ol></li><li>정렬한 List를 String[]로 만들어서 return 한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (2.80ms, 52.3MB)</td></tr><tr><td>테스트 2</td><td>통과 (2.92ms, 52.8MB)</td></tr><tr><td>테스트 3</td><td>통과 (15.41ms, 54.1MB)</td></tr><tr><td>테스트 4</td><td>통과 (17.89ms, 54.3MB)</td></tr><tr><td>테스트 5</td><td>통과 (16.74ms, 54.3MB)</td></tr><tr><td>테스트 6</td><td>통과 (15.07ms, 53.3MB)</td></tr><tr><td>테스트 7</td><td>통과 (21.21ms, 54.5MB)</td></tr><tr><td>테스트 8</td><td>통과 (21.20ms, 53.8MB)</td></tr><tr><td>테스트 9</td><td>통과 (17.57ms, 53.6MB)</td></tr><tr><td>테스트 10</td><td>통과 (20.00ms, 53.5MB)</td></tr><tr><td>테스트 11</td><td>통과 (15.30ms, 53.8MB)</td></tr><tr><td>테스트 12</td><td>통과 (14.44ms, 54.1MB)</td></tr><tr><td>테스트 13</td><td>통과 (10.24ms, 53.8MB)</td></tr><tr><td>테스트 14</td><td>통과 (12.50ms, 54.1MB)</td></tr><tr><td>테스트 15</td><td>통과 (18.61ms, 54.1MB)</td></tr><tr><td>테스트 16</td><td>통과 (20.40ms, 53.9MB)</td></tr><tr><td>테스트 17</td><td>통과 (10.36ms, 53.8MB)</td></tr><tr><td>테스트 18</td><td>통과 (13.84ms, 54.6MB)</td></tr><tr><td>테스트 19</td><td>통과 (16.07ms, 54.4MB)</td></tr><tr><td>테스트 20</td><td>통과 (14.91ms, 53.8MB)</td></tr></tbody></table><hr><hr><h2 id="정렬을-stream에-추가-할-경우"><a href="#정렬을-stream에-추가-할-경우" class="headerlink" title="정렬을 stream에 추가 할 경우"></a>정렬을 stream에 추가 할 경우</h2><h3 id="stream-sorted"><a href="#stream-sorted" class="headerlink" title="stream sorted"></a>stream sorted</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> fileList.stream()</span><br><span class="line">        .sorted(Comparator.comparing(File::getHead)</span><br><span class="line">        .thenComparing(Comparator.comparing(File::getNumber)</span><br><span class="line">        .thenComparing(File::getIndex)))</span><br><span class="line">        .map(File::getOriginName)</span><br><span class="line">        .toArray(String[]::<span class="keyword">new</span>);</span><br></pre></td></tr></table></figure><h3 id="결과-1"><a href="#결과-1" class="headerlink" title="결과"></a>결과</h3><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (10.64ms, 53.2MB)</td></tr><tr><td>테스트 2</td><td>통과 (18.65ms, 53.2MB)</td></tr><tr><td>테스트 3</td><td>통과 (25.96ms, 54.7MB)</td></tr><tr><td>테스트 4</td><td>통과 (24.73ms, 54.8MB)</td></tr><tr><td>테스트 5</td><td>통과 (20.97ms, 54.3MB)</td></tr><tr><td>테스트 6</td><td>통과 (29.57ms, 54.3MB)</td></tr><tr><td>테스트 7</td><td>통과 (30.45ms, 54.3MB)</td></tr><tr><td>테스트 8</td><td>통과 (24.91ms, 54.3MB)</td></tr><tr><td>테스트 9</td><td>통과 (26.40ms, 54.8MB)</td></tr><tr><td>테스트 10</td><td>통과 (28.88ms, 54.1MB)</td></tr><tr><td>테스트 11</td><td>통과 (22.73ms, 54.7MB)</td></tr><tr><td>테스트 12</td><td>통과 (25.60ms, 54.4MB)</td></tr><tr><td>테스트 13</td><td>통과 (22.06ms, 54.2MB)</td></tr><tr><td>테스트 14</td><td>통과 (19.49ms, 54.9MB)</td></tr><tr><td>테스트 15</td><td>통과 (17.53ms, 54.2MB)</td></tr><tr><td>테스트 16</td><td>통과 (20.05ms, 54.1MB)</td></tr><tr><td>테스트 17</td><td>통과 (18.01ms, 54.7MB)</td></tr><tr><td>테스트 18</td><td>통과 (18.53ms, 53.7MB)</td></tr><tr><td>테스트 19</td><td>통과 (26.25ms, 54.2MB)</td></tr><tr><td>테스트 20</td><td>통과 (20.81ms, 55.2MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">assertArrayEquals(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;img1.png&quot;</span>, <span class="string">&quot;IMG01.GIF&quot;</span>, <span class="string">&quot;img02.png&quot;</span>, <span class="string">&quot;img2.JPG&quot;</span>, <span class="string">&quot;img10.png&quot;</span>, <span class="string">&quot;img12.png&quot;</span>&#125;, test.solution(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;img12.png&quot;</span>, <span class="string">&quot;img10.png&quot;</span>, <span class="string">&quot;img02.png&quot;</span>, <span class="string">&quot;img1.png&quot;</span>, <span class="string">&quot;IMG01.GIF&quot;</span>, <span class="string">&quot;img2.JPG&quot;</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;A-10 Thunderbolt II&quot;</span>, <span class="string">&quot;B-50 Superfortress&quot;</span>, <span class="string">&quot;F-5 Freedom Fighter&quot;</span>, <span class="string">&quot;F-14 Tomcat&quot;</span>&#125;, test.solution(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;F-5 Freedom Fighter&quot;</span>, <span class="string">&quot;B-50 Superfortress&quot;</span>, <span class="string">&quot;A-10 Thunderbolt II&quot;</span>, <span class="string">&quot;F-14 Tomcat&quot;</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;img100.p2ng&quot;</span>, <span class="string">&quot;img202.png123&quot;</span>&#125;, test.solution(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;img202.png123&quot;</span>, <span class="string">&quot;img100.p2ng&quot;</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;foo010bar020.zip&quot;</span>, <span class="string">&quot;foo010bar030.zip&quot;</span>&#125;, test.solution(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;foo010bar020.zip&quot;</span>, <span class="string">&quot;foo010bar030.zip&quot;</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;F-15&quot;</span>, <span class="string">&quot;F-17&quot;</span>, <span class="string">&quot;F-22&quot;</span>&#125;, test.solution(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;F-22&quot;</span>, <span class="string">&quot;F-17&quot;</span>, <span class="string">&quot;F-15&quot;</span>&#125;));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17686&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 프렌즈4블록</title>
    <link href="https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%94%84%EB%A0%8C%EC%A6%884%EB%B8%94%EB%A1%9D/"/>
    <id>https://jungguji.github.io/2020/11/12/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%94%84%EB%A0%8C%EC%A6%884%EB%B8%94%EB%A1%9D/</id>
    <published>2020-11-12T09:38:01.000Z</published>
    <updated>2020-11-12T09:43:26.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17679">https://programmers.co.kr/learn/courses/30/lessons/17679</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ASCII = <span class="number">32</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">char</span> EMPTY = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n, String[] board)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span>[][] charBoard = convertStringArrayToCharArray(m, n, board);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">boolean</span> isEnd = box(charBoard);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isEnd) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        answer += delete(charBoard);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">char</span>[][] convertStringArrayToCharArray(<span class="keyword">int</span> m, <span class="keyword">int</span> n, String[] board) &#123;</span><br><span class="line">    <span class="keyword">char</span>[][] charBoard = <span class="keyword">new</span> <span class="keyword">char</span>[m][n];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String str : board) &#123;</span><br><span class="line">        <span class="keyword">char</span>[] toChar = str.toCharArray();</span><br><span class="line">        charBoard[i] = toChar;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> charBoard;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">toLowerCase</span><span class="params">(<span class="keyword">char</span> value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">char</span>) ((value &gt;= <span class="number">65</span> &amp;&amp; value &lt;= <span class="number">90</span>) ? (value + ASCII) : value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">box</span><span class="params">(<span class="keyword">char</span>[][] charBoard)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> isEnd = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charBoard.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; charBoard[i].length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (validation(i, j, charBoard)) &#123;</span><br><span class="line">                <span class="keyword">char</span> value = toLowerCase(charBoard[i][j]);</span><br><span class="line">                charBoard[i][j] = value;</span><br><span class="line">                charBoard[i][j+<span class="number">1</span>] = value;</span><br><span class="line">                charBoard[i+<span class="number">1</span>][j] = value;</span><br><span class="line">                charBoard[i+<span class="number">1</span>][j+<span class="number">1</span>] = value;</span><br><span class="line"></span><br><span class="line">                isEnd = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isEnd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">validation</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">char</span>[][] charBoard)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((i + <span class="number">1</span>) == charBoard.length || (j + <span class="number">1</span>) == charBoard[<span class="number">0</span>].length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> position = toLowerCase(charBoard[i][j]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position == EMPTY) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> moveX = toLowerCase(charBoard[i][j+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">char</span> moveY = toLowerCase(charBoard[i+<span class="number">1</span>][j]);</span><br><span class="line">    <span class="keyword">char</span> moveXY = toLowerCase(charBoard[i+<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position != moveX) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position != moveY) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (position != moveXY) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">char</span>[][] charBoard)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; charBoard.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; charBoard[i].length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (charBoard[i][j] == EMPTY) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (charBoard[i][j] &gt;= <span class="number">97</span> &amp;&amp; charBoard[i][j] &lt;= <span class="number">122</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &gt; <span class="number">0</span>; k--) &#123;</span><br><span class="line">                        charBoard[k][j] = charBoard[k-<span class="number">1</span>][j];</span><br><span class="line">                        charBoard[k-<span class="number">1</span>][j] = EMPTY;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    charBoard[i][j] = EMPTY;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                ++answer;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>String array로 넘어온 board를 2차원 array로 만든다.</li><li>무한루프를 돌면서 char로 만든 board array의 element들을 모두 꺼내면서</li><li>제약조건을 확인하여 모두 통과할 때만 true를 return 한다.<ol><li>현재 element가 있는 위치가 맨 끝인지</li><li>현재 element가 빈 값인지</li><li>현재 element의 오른쪽 element와 값이 같지 않은지</li><li>현재 element의 아래쪽 element와 값이 같지 않은지</li><li>현재 element의 우하(右下)쪽 element와 값이 같지 않은지</li></ol></li><li>제약조건을 통과하면 현재 위치에서 오른쪽, 아래쪽, 우하(右下)쪽 element들을 소문자로 만들고 삭제 할 블록이 남았으므로, false를 return 한다.</li><li>다시 board array를 반복하면서 element가 소문자인 경우</li><li>현재 높이가 0이라면 위에서 내려올 블록이 없으므로 바로 빈 값을 저장하고</li><li>0이 아니라면 현재 위치부터 값을 1씩 빼면서 위에 블록을 현재 위치에 저장 시키고 위 블록은 빈 값으로 저장한다.</li><li>블록을 제거 할 때 마다 제거시킨 블록 개수를 저장하는 변수를 증가시킨다.</li><li>삭제 할 블록이 없을 때 까지 2번부터 8번까지 반복하고 삭제 할 블록이 없으면 루프를 빠져 나오고 삭제한 블록의 개수를 return 한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (0.07ms, 52.3MB)</td></tr><tr><td>테스트 2</td><td>통과 (0.09ms, 51.7MB)</td></tr><tr><td>테스트 3</td><td>통과 (0.04ms, 51.9MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.08ms, 52.5MB)</td></tr><tr><td>테스트 5</td><td>통과 (14.40ms, 52.6MB)</td></tr><tr><td>테스트 6</td><td>통과 (3.08ms, 52.3MB)</td></tr><tr><td>테스트 7</td><td>통과 (0.81ms, 52.3MB)</td></tr><tr><td>테스트 8</td><td>통과 (1.81ms, 53.7MB)</td></tr><tr><td>테스트 9</td><td>통과 (0.07ms, 53.4MB)</td></tr><tr><td>테스트 10</td><td>통과 (0.59ms, 51.7MB)</td></tr><tr><td>테스트 11</td><td>통과 (1.38ms, 52.7MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="number">14</span>, test.solution(<span class="number">4</span>,<span class="number">5</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;CCBDE&quot;</span>, <span class="string">&quot;AAADE&quot;</span>, <span class="string">&quot;AAABF&quot;</span>, <span class="string">&quot;CCBBF&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">15</span>, test.solution(<span class="number">6</span>,<span class="number">6</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;TTTANT&quot;</span>, <span class="string">&quot;RRFACC&quot;</span>, <span class="string">&quot;RRRFCC&quot;</span>, <span class="string">&quot;TRRRAA&quot;</span>, <span class="string">&quot;TTMMMF&quot;</span>, <span class="string">&quot;TMMTTJ&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">14</span>, test.solution(<span class="number">4</span>,<span class="number">5</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AAAAA&quot;</span>,<span class="string">&quot;AUUUA&quot;</span>,<span class="string">&quot;AUUAA&quot;</span>,<span class="string">&quot;AAAAA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">4</span>, test.solution(<span class="number">2</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AA&quot;</span>,<span class="string">&quot;AA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">0</span>, test.solution(<span class="number">2</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AA&quot;</span>,<span class="string">&quot;AB&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">4</span>, test.solution(<span class="number">3</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AA&quot;</span>,<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AB&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">8</span>, test.solution(<span class="number">4</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;CC&quot;</span>,<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;CC&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">12</span>, test.solution(<span class="number">6</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;DD&quot;</span>, <span class="string">&quot;CC&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;CC&quot;</span>, <span class="string">&quot;DD&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">8</span>, test.solution(<span class="number">8</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;FF&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;CC&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;CC&quot;</span>, <span class="string">&quot;DD&quot;</span>, <span class="string">&quot;FF&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">8</span>, test.solution(<span class="number">6</span>,<span class="number">2</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;CC&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;AA&quot;</span>, <span class="string">&quot;DD&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">8</span>, test.solution(<span class="number">4</span>,<span class="number">4</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;ABCD&quot;</span>, <span class="string">&quot;BACE&quot;</span>, <span class="string">&quot;BCDD&quot;</span>, <span class="string">&quot;BCDD&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">27</span>, test.solution(<span class="number">8</span>,<span class="number">9</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;ABCDADFDA&quot;</span>, <span class="string">&quot;ABDFQWERF&quot;</span>, <span class="string">&quot;WKDNFNRIT&quot;</span>, <span class="string">&quot;AKAKWODCJ&quot;</span>, <span class="string">&quot;AKAKWODCJ&quot;</span>, <span class="string">&quot;KKKKKKKKK&quot;</span>, <span class="string">&quot;KKKKKKKKK&quot;</span>, <span class="string">&quot;KKKKKKKKK&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">15</span>, test.solution(<span class="number">4</span>,<span class="number">5</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AAAAA&quot;</span>, <span class="string">&quot;AAAAU&quot;</span>, <span class="string">&quot;AAAUU&quot;</span>, <span class="string">&quot;UUUUU&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">24</span>, test.solution(<span class="number">5</span>,<span class="number">6</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AAAAAA&quot;</span>, <span class="string">&quot;BBAATB&quot;</span>, <span class="string">&quot;BBAATB&quot;</span>, <span class="string">&quot;JJJTAA&quot;</span>, <span class="string">&quot;JJJTAA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">32</span>, test.solution(<span class="number">6</span>,<span class="number">6</span>, <span class="keyword">new</span> String[] &#123;<span class="string">&quot;AABBEE&quot;</span>, <span class="string">&quot;AAAEEE&quot;</span>, <span class="string">&quot;VAAEEV&quot;</span>, <span class="string">&quot;AABBEE&quot;</span>, <span class="string">&quot;AACCEE&quot;</span>, <span class="string">&quot;VVCCEE&quot;</span>&#125;));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17679&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>Vue 개발 순서 정리</title>
    <link href="https://jungguji.github.io/2020/11/10/Vue-%EA%B0%9C%EB%B0%9C-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A6%AC/"/>
    <id>https://jungguji.github.io/2020/11/10/Vue-%EA%B0%9C%EB%B0%9C-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A6%AC/</id>
    <published>2020-11-10T10:10:35.000Z</published>
    <updated>2020-11-10T10:34:24.818Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>Spring boot + Vue를 활용해 토이 프로젝트 진행하고 있는데 헷갈리는 부분을 차후 또 Vue로 개발 할 일이 있을 경우 참고하기 위해 글로 남겨 놓는다.</p><h2 id="개발-순서"><a href="#개발-순서" class="headerlink" title="개발 순서"></a>개발 순서</h2><ul><li>Vue는 설치되어 있다고 가정한다.</li></ul><ol><li>root 디렉토리에 vue.config.js 생성하고 필요한 설정 추가</li></ol><h3 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  assetsDir: <span class="string">&quot;static&quot;</span>,</span><br><span class="line">  outputDir: path.resolve(__dirname, <span class="string">&quot;../backend/src/main/resources/static&quot;</span>),</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      <span class="string">&quot;/&quot;</span>: &#123;</span><br><span class="line">        target: <span class="string">&quot;http://localhost:9312&quot;</span>,</span><br><span class="line">        ws: <span class="literal">true</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  chainWebpack: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> svgRule = config.module.rule(<span class="string">&quot;svg&quot;</span>);</span><br><span class="line">    svgRule.uses.clear();</span><br><span class="line">    svgRule.use(<span class="string">&quot;vue-svg-loader&quot;</span>).loader(<span class="string">&quot;vue-svg-loader&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="2"><li>views/ 에 화면이 될 vue 파일 생성</li><li>src/ 에 api 폴더 생성</li><li>api/ 에 화면 별로 필요한 js 파일 생성<ol><li>이 js 파일들엔 각 컴포넌트 별로 필요한 api 주소를 호출 할 수 있는 js 코드를 작성한다.</li></ol></li><li>api 호출 시 공통으로 들어갈 header를 포함하는 common.js 생성</li></ol><h3 id="common-js"><a href="#common-js" class="headerlink" title="common.js"></a>common.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AXIOS = axios.create(&#123;</span><br><span class="line">  headers: &#123;</span><br><span class="line">    <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json; charset = utf-8&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  timeout: <span class="number">1000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="6"><li>components/ 에 2번에서 만든 화면에 출력 될 component vue 파일 생성</li><li>router/index.js 에 추가한 vue path 추가<ul><li>rotuer에 추가하지 않으면 화면이 나오지 않음</li></ul></li></ol><h3 id="router-index-js"><a href="#router-index-js" class="headerlink" title="router/index.js"></a>router/index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&quot;/main&quot;</span>,</span><br><span class="line">    name: <span class="string">&quot;Main&quot;</span>,</span><br><span class="line">    component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;../views/Main&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;Spring boot + Vue를 활용해 토이 프로젝트 진행하고 있는데 헷갈리는 부분을 차후 또 Vue로 개발 할 일이 있을 </summary>
      
    
    
    
    
    <category term="Vue.js" scheme="https://jungguji.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>JQPL은 return class로 Inner class는 불가능</title>
    <link href="https://jungguji.github.io/2020/11/10/JQPL%EC%9D%80-return-class%EB%A1%9C-Inner-class%EB%8A%94-%EB%B6%88%EA%B0%80%EB%8A%A5/"/>
    <id>https://jungguji.github.io/2020/11/10/JQPL%EC%9D%80-return-class%EB%A1%9C-Inner-class%EB%8A%94-%EB%B6%88%EA%B0%80%EB%8A%A5/</id>
    <published>2020-11-10T09:39:23.000Z</published>
    <updated>2020-11-10T09:50:18.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p><strong>JPQL의 return 값으로 Inner class를 지정하면 class를 찾을 수 없다는 에러가 발생 하므로 Inner class 말고 따로 class를 생성하고 그 class를 return class로 지정해줘야 한다.</strong></p><hr><h2 id="발견"><a href="#발견" class="headerlink" title="발견"></a>발견</h2><p>아래 처럼 DTO를 생성하고 view별로 inner class로 DTO를 만들고 jpql의 return class로 지정해주었는데 클래스를 찾을 수 없다는 에러가 발생하였다.</p><h3 id="DTO"><a href="#DTO" class="headerlink" title="DTO"></a>DTO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChannelDTO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SubChannelList</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Integer subChannel;</span><br><span class="line">        <span class="keyword">private</span> KillTime killTime;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Builder</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SubChannelList</span><span class="params">(Integer subChannel, KillTime killTime)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.subChannel = subChannel;</span><br><span class="line">            <span class="keyword">this</span>.killTime = killTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JPQL-호출-메서드"><a href="#JPQL-호출-메서드" class="headerlink" title="JPQL 호출 메서드"></a>JPQL 호출 메서드</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SubChannelList&gt; <span class="title">findSubChannelList</span><span class="params">(Integer dungeonId, Integer mainChannel)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> em.createQuery(</span><br><span class="line">            <span class="string">&quot;select new com.jungguji.windbossgentimer.web.dto.channel.ChannelDTO.SubChannelList&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;(c.subChannel, k)&quot;</span> +</span><br><span class="line">                    <span class="string">&quot; FROM Channel c left join c.killTimes k&quot;</span> +</span><br><span class="line">                    <span class="string">&quot; WHERE c.dungeon.id = :dungeonId AND c.mainChannel = :mainChannel&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;&quot;</span>, SubChannelList.class)</span><br><span class="line">            .setParameter(<span class="string">&quot;dungeonId&quot;</span>, dungeonId)</span><br><span class="line">            .setParameter(<span class="string">&quot;mainChannel&quot;</span>, mainChannel)</span><br><span class="line">            .getResultList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="발생한-에러"><a href="#발생한-에러" class="headerlink" title="발생한 에러"></a>발생한 에러</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: Unable to locate class [com.jungguji.windbossgentimer.web.dto.channel.ChannelDTO.SubChannelList] [select new com.jungguji.windbossgentimer.web.dto.channel.ChannelDTO.SubChannelList(c.subChannel, k) FROM com.jungguji.windbossgentimer.domain.channel.Channel c left join c.killTimes k WHERE c.dungeon.id = :dungeonId AND c.mainChannel = :mainChannel]</span><br><span class="line">    at org.hibernate.hql.internal.ast.QuerySyntaxException.convert(QuerySyntaxException.java:<span class="number">74</span>)</span><br><span class="line">    at org.hibernate.hql.internal.ast.ErrorTracker.throwQueryException(ErrorTracker.java:<span class="number">93</span>)</span><br><span class="line">    at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:<span class="number">282</span>)</span><br><span class="line">    at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:<span class="number">192</span>)</span><br><span class="line">    at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:<span class="number">144</span>)</span><br><span class="line">    at org.hibernate.engine.query.spi.HQLQueryPlan.&lt;init&gt;(HQLQueryPlan.java:<span class="number">113</span>)</span><br><span class="line">    at org.hibernate.engine.query.spi.HQLQueryPlan.&lt;init&gt;(HQLQueryPlan.java:<span class="number">73</span>)</span><br><span class="line">    at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:<span class="number">162</span>)</span><br><span class="line">    at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:<span class="number">604</span>)</span><br><span class="line">    at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:<span class="number">716</span>)</span><br><span class="line">    ... <span class="number">73</span> more</span><br></pre></td></tr></table></figure><hr><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>Inner class로 되어있던 DTO를 class로 생성한다.</p><h3 id="따로-생성한-DTO"><a href="#따로-생성한-DTO" class="headerlink" title="따로 생성한 DTO"></a>따로 생성한 DTO</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubChannelListResponseDTO</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer subChannel;</span><br><span class="line">    <span class="keyword">private</span> KillTime killTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Builder</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SubChannelListResponseDTO</span><span class="params">(Integer subChannel, KillTime killTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.subChannel = subChannel;</span><br><span class="line">        <span class="keyword">this</span>.killTime = killTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h3><p><img src="source_posts%5CJQPL%EC%9D%80-return-class%EB%A1%9C-Inner-class%EB%8A%94-%EB%B6%88%EA%B0%80%EB%8A%A5%5C%EA%B2%B0%EA%B3%BC.PNG" alt="Junit Test 통과한 모습"></p><hr><h2 id="P-S"><a href="#P-S" class="headerlink" title="P.S"></a>P.S</h2><ul><li>일반적으로 class명과 table명을 헷갈려 대소문자 때문에 발생하는 에러 이므로 대소문자도 잘 확인 하여야 한다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;결론&quot;&gt;&lt;a href=&quot;#결론&quot; class=&quot;headerlink&quot; title=&quot;결론&quot;&gt;&lt;/a&gt;결론&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JPQL의 return 값으로 Inner class를 지정하면 class를 찾을 수 없다는 에러가 발생 하므로 </summary>
      
    
    
    
    
    <category term="JPA" scheme="https://jungguji.github.io/tags/JPA/"/>
    
    <category term="JPQL" scheme="https://jungguji.github.io/tags/JPQL/"/>
    
  </entry>
  
  <entry>
    <title>백준 18111번: 마인크래프트</title>
    <link href="https://jungguji.github.io/2020/11/10/%EB%B0%B1%EC%A4%80-18111%EB%B2%88-%EB%A7%88%EC%9D%B8%ED%81%AC%EB%9E%98%ED%94%84%ED%8A%B8/"/>
    <id>https://jungguji.github.io/2020/11/10/%EB%B0%B1%EC%A4%80-18111%EB%B2%88-%EB%A7%88%EC%9D%B8%ED%81%AC%EB%9E%98%ED%94%84%ED%8A%B8/</id>
    <published>2020-11-10T09:33:11.000Z</published>
    <updated>2020-11-10T09:38:24.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/18111">https://www.acmicpc.net/problem/18111</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 마인크래프트 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in))) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] nmb = convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> n = nmb[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> m = nmb[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span>[][] ground = initGround(br, n, m);</span><br><span class="line">            <span class="keyword">int</span>[] minAndMax = getMinAndMax(ground);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span>[] timeAndHigh = getMinimumConstructionTime(ground, nmb[<span class="number">2</span>], minAndMax[<span class="number">0</span>], minAndMax[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">            System.out.println(timeAndHigh[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + timeAndHigh[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] convertStringArrayToIntegerArray(String[] args) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[args.length];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">            array[i++] = Integer.parseInt(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] initGround(BufferedReader br, <span class="keyword">int</span> n, <span class="keyword">int</span> m) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">int</span>[][] ground = <span class="keyword">new</span> <span class="keyword">int</span>[n][m];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ground[i] = convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ground;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getMinAndMax(<span class="keyword">int</span>[][] ground) &#123;</span><br><span class="line">        <span class="keyword">int</span> min = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MIN_VALUE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] i : ground) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j : i) &#123;</span><br><span class="line">                min = min &gt; j ? j : min;</span><br><span class="line">                max = max &lt; j ? j : max;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;min, max&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getMinimumConstructionTime(<span class="keyword">int</span>[][] ground, <span class="keyword">int</span> inventory, <span class="keyword">int</span> min, <span class="keyword">int</span> max) &#123;</span><br><span class="line">        <span class="keyword">int</span> answerTime = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> answerHigh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> currentHigh = min; currentHigh &lt;= max; currentHigh++) &#123;</span><br><span class="line">            <span class="keyword">int</span> up = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> down = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ground.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ground[<span class="number">0</span>].length; j++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> high = ground[i][j] - currentHigh;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (high &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        down += high;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (high &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        up -= high;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (down + inventory &gt;= up) &#123;</span><br><span class="line">                <span class="keyword">int</span> time = (down * <span class="number">2</span>) + up;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (answerTime &gt;= time) &#123;</span><br><span class="line">                    answerTime = time;</span><br><span class="line">                    answerHigh = currentHigh;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;answerTime, answerHigh&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>n * m 크기의 2차원 배열을 만들어서 저장한다.</li><li>땅 높이를 저장한 2차원 배열을 돌면서 가장 작은 높이와 가장 큰 높이를 구한다.</li><li>우선, 가장 낮은 높이부터 가장 높은 높이 까지 반복하면서</li><li>3번에 해당하는 높이를 기준으로 2차원 배열을 2중 루프 돌면서 모든 땅에서 현재 땅 높이를 뺀다. (int high = ground[i][j] - currentHigh;)</li><li>그 높이가 0보다 크면 기준이 되는 땅보다 높은 것 이므로 땅을 깎아서 기준이 되는 높이와 맞추기 위해 down 변수에 높이를 더한다.</li><li>반대로 0 보다 작으면 기준이 되는 땅 보다 낮은 것이므로 땅을 높여서 기준이 되는 높이와 맞추기 위해 up 변수에 높이를 더해야 하는데 high가 0보다 작으면 - 이므로 up에 높이를 - 해서 더한다.</li><li>그렇게 2차원 배열을 전부 반복했으면 땅을 깎으면서 구한 블록과 원래 인벤토리에 있던 블록의 갯수가 쌓아야되는 블록의 갯수보다 크거나 같아야 높이를 맞출 수 있으므로 크거나 같은지 비교해서</li><li>땅을 깎는건 2초가 걸리므로 down * 2 한 값에 쌓아야 되는 높이 만큼 더한다.</li><li>그렇게 구한 걸리는 시간이 이전에 구한 최소 시간 보다 작으면 최소 시간을 지금 구한 time으로 변경하고</li><li>걸리는 시간이 같은 경우엔 가장 높은 높이로 구해야 하므로</li><li>높이도 현재 높이로 바꿔준다.<ul><li>높이는 제일 작은 높이부터 제일 큰 높이로 순차적으로 올라가고 있으므로 나중에 구한 높이가 이전에 구한 높이 보다 무조건 높다.</li></ul></li><li>끝.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="source_posts%5C%EB%B0%B1%EC%A4%80-18111%EB%B2%88-%EB%A7%88%EC%9D%B8%ED%81%AC%EB%9E%98%ED%94%84%ED%8A%B8%5C%EA%B2%B0%EA%B3%BC.PNG" alt="결과"></p><hr><h2 id="P-S-BFS로-시도했던-코드"><a href="#P-S-BFS로-시도했던-코드" class="headerlink" title="P.S BFS로 시도했던 코드"></a>P.S BFS로 시도했던 코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> algorithm.baekjoon.class2.bruteforce;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 마인크래프트 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in))) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] nmb = convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> n = nmb[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">int</span> m = nmb[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span>[][] ground = initGround(br, n, m);</span><br><span class="line">            <span class="keyword">boolean</span>[][] isPassed = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][m];</span><br><span class="line"></span><br><span class="line">            List&lt;Block&gt; blockList = getBlockList(n, m, ground, isPassed);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span>[] timeAndHigh = getMinimumConstructionTime(blockList, nmb[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">            System.out.println(timeAndHigh[<span class="number">0</span>] + <span class="string">&quot; &quot;</span> + timeAndHigh[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] convertStringArrayToIntegerArray(String[] args) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[args.length];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">            array[i++] = Integer.parseInt(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] initGround(BufferedReader br, <span class="keyword">int</span> n, <span class="keyword">int</span> m) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">int</span>[][] ground = <span class="keyword">new</span> <span class="keyword">int</span>[n][m];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            ground[i]= convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ground;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Block&gt; <span class="title">getBlockList</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span>[][] ground, <span class="keyword">boolean</span>[][] isPassed)</span> </span>&#123;</span><br><span class="line">        List&lt;Block&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (isPassed[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> count = breadthFirstSearch(i, j, ground, isPassed);</span><br><span class="line"></span><br><span class="line">                list.add(<span class="keyword">new</span> Block(ground[i][j], count));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">breadthFirstSearch</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span>[][] picture, <span class="keyword">boolean</span>[][] isPassed)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] xAround = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span>[] yAround = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> areaRange = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        Queue&lt;Position&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        setPassedArea(isPassed, queue, x, y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            Position currentPosition = queue.poll();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; xAround.length; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> moveX = xAround[i] + currentPosition.x;</span><br><span class="line">                <span class="keyword">int</span> moveY = yAround[i] + currentPosition.y;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!isSameAreaValidation(moveX, moveY, picture, isPassed, currentPosition)) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                setPassedArea(isPassed, queue, moveX, moveY);</span><br><span class="line">                ++areaRange;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> areaRange;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setPassedArea</span><span class="params">(<span class="keyword">boolean</span>[][] isPassed, Queue&lt;Position&gt; queue, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        isPassed[x][y] = <span class="keyword">true</span>;</span><br><span class="line">        queue.offer(<span class="keyword">new</span> Position(x, y));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSameAreaValidation</span><span class="params">(<span class="keyword">int</span> moveX, <span class="keyword">int</span> moveY, <span class="keyword">int</span>[][] picture, <span class="keyword">boolean</span>[][] isPassed, Position currentPosition)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isOutOfPicture(moveX, moveY, picture)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isPassed[moveX][moveY]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (picture[currentPosition.x][currentPosition.y] != picture[moveX][moveY]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isOutOfPicture</span><span class="params">(<span class="keyword">int</span> moveX, <span class="keyword">int</span> moveY, <span class="keyword">int</span>[][] picture)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (moveX &lt; <span class="number">0</span> || moveY &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (picture.length &lt;= moveX || picture[<span class="number">0</span>].length &lt;= moveY) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getMinimumConstructionTime(List&lt;Block&gt; blockList, <span class="keyword">int</span> inventory) &#123;</span><br><span class="line">        <span class="keyword">int</span> answerTime = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">int</span> answerHigh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Block currentBlock : blockList) &#123;</span><br><span class="line">            <span class="keyword">int</span> currentHigh = currentBlock.high;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> up = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> down = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Block loopBlock : blockList) &#123;</span><br><span class="line">                <span class="keyword">int</span> loopHigh = loopBlock.high;</span><br><span class="line">                <span class="keyword">int</span> loopCount = loopBlock.count;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (currentHigh &gt; loopHigh) &#123;</span><br><span class="line">                    up += (currentHigh - loopHigh) * loopCount;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentHigh &lt; loopHigh) &#123;</span><br><span class="line">                    down += (loopHigh - currentHigh) * loopCount;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (down + inventory &gt;= up) &#123;</span><br><span class="line">                <span class="keyword">int</span> time = (down * <span class="number">2</span>) + up;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (answerTime &gt; time) &#123;</span><br><span class="line">                    answerTime = time;</span><br><span class="line">                    answerHigh = currentBlock.high;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;answerTime, answerHigh&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Block</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Integer high;</span><br><span class="line">        <span class="keyword">private</span> Integer count;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Block</span><span class="params">(Integer high, Integer count)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.high = high;</span><br><span class="line">            <span class="keyword">this</span>.count = count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Position</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> x;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> y;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Position</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.x = x;</span><br><span class="line">            <span class="keyword">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>BFS로 높이 별 갯수를 구한 후 높이 별로 sorting 하여 처리 하려고 했는데 시간 초과로 실패</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/18111&quot;&gt;https://www.acmicpc.ne</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="브루트포스" scheme="https://jungguji.github.io/tags/%EB%B8%8C%EB%A3%A8%ED%8A%B8%ED%8F%AC%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>백준 2805번: 나무 자르기</title>
    <link href="https://jungguji.github.io/2020/11/10/%EB%B0%B1%EC%A4%80-2805%EB%B2%88-%EB%82%98%EB%AC%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0/"/>
    <id>https://jungguji.github.io/2020/11/10/%EB%B0%B1%EC%A4%80-2805%EB%B2%88-%EB%82%98%EB%AC%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0/</id>
    <published>2020-11-10T09:25:24.000Z</published>
    <updated>2020-11-10T09:30:14.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/2805">https://www.acmicpc.net/problem/2805</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 나무<span class="title">_</span>자르기 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>(BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in))) &#123;</span><br><span class="line">            <span class="keyword">long</span>[] nm = convertStringArrayToLongArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> m = nm[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span>[] trees = convertStringArrayToLongArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> answer = solution(trees, m);</span><br><span class="line"></span><br><span class="line">            System.out.println(answer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span>[] convertStringArrayToLongArray(String[] args) &#123;</span><br><span class="line">        <span class="keyword">long</span>[] array = <span class="keyword">new</span> <span class="keyword">long</span>[args.length];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">            array[i++] = Integer.parseInt(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">solution</span><span class="params">(<span class="keyword">long</span>[] trees, <span class="keyword">long</span> m)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(trees);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> high = trees[trees.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> answer = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">            <span class="keyword">long</span> mid = (low + high) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">long</span> sum = getTrees(trees, mid);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (sum &lt; m) &#123;</span><br><span class="line">                high = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                answer = Math.max(answer, mid);</span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getTrees</span><span class="params">(<span class="keyword">long</span>[] trees, <span class="keyword">long</span> mid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; trees.length; i++) &#123;</span><br><span class="line">            sum += trees[i] &gt; mid ? trees[i] - mid : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>나무들을 크기가 큰 순서로 정렬한다.</li><li>0부터 높이가 제일 큰 나무까지 탐색하기 위해 low와 high 변수를 지정한다.</li><li>low와 high의 중간 값을 구한다.</li><li>나무들을 반복하면서 중간 값 보다 크면 나무 길이와 중간 값을 뺀 값을 더한다.</li><li>그렇게 벌목한 나무를 전부 더한 값이 필요한 나무 길이인 m 보다 작으면,</li><li>벌복한 나무의 길이가 m보다 크거나 같으면, 벌목한 나무가 남는 것 이므로, 나무를 낭비하지 않기 위해 이전에 구한 중간 값(answer) 와 현재 중간 값 중 큰 값을 저장하고 중간 값 + 1 해서 최소 값을 올린다.</li><li>반대로 벌목한 나무의 길이가 m 보다 작은 경우 더 크게 자르기 위해 중간 값 - 1을 high에 저장해서 다음 루프 때 (low + high) &gt;&gt;&gt; 1 에서 더 크게 잘릴 수 있도록 한다.</li><li>low와 high가 같아질 때 까지 반복한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="./%EB%B0%B1%EC%A4%80-2805%EB%B2%88-%EB%82%98%EB%AC%B4-%EC%9E%90%EB%A5%B4%EA%B8%B0/%EC%BA%A1%EC%B2%98.PNG" alt="결과"></p><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="number">15</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">20</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">17</span>&#125;, <span class="number">7</span>));</span><br><span class="line">assertEquals(<span class="number">3</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">6</span>, <span class="number">6</span>&#125;, <span class="number">5</span>));</span><br><span class="line">assertEquals(<span class="number">4</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>&#125;, <span class="number">6</span>));</span><br><span class="line">assertEquals(<span class="number">500000000</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">900000000</span>, <span class="number">900000000</span>, <span class="number">900000000</span>, <span class="number">900000000</span>, <span class="number">900000000</span>&#125;, <span class="number">2000000000</span>));</span><br><span class="line">assertEquals(<span class="number">19</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">20</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">17</span>&#125;, <span class="number">1</span>));</span><br><span class="line">assertEquals(<span class="number">0</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">2</span>, <span class="number">2</span>&#125;, <span class="number">3</span>));</span><br><span class="line">assertEquals(<span class="number">21</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">13</span>, <span class="number">23</span>, <span class="number">21</span>, <span class="number">32</span>&#125;, <span class="number">12</span>));</span><br><span class="line">assertEquals(<span class="number">2</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>&#125;, <span class="number">10</span>));</span><br><span class="line">assertEquals(<span class="number">1</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">51</span>, <span class="number">1</span>&#125;, <span class="number">50</span>));</span><br><span class="line">assertEquals(<span class="number">999999999</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">1000000000</span>&#125;, <span class="number">1</span>));</span><br><span class="line">assertEquals(<span class="number">0</span>, test.solution(<span class="keyword">new</span> <span class="keyword">long</span>[] &#123;<span class="number">2</span>, <span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>&#125;, <span class="number">8</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2805&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="이진탐색" scheme="https://jungguji.github.io/tags/%EC%9D%B4%EC%A7%84%ED%83%90%EC%83%89/"/>
    
  </entry>
  
  <entry>
    <title>백준 1920번: 수 찾기</title>
    <link href="https://jungguji.github.io/2020/09/01/%EB%B0%B1%EC%A4%80-1920%EB%B2%88-%EC%88%98-%EC%B0%BE%EA%B8%B0/"/>
    <id>https://jungguji.github.io/2020/09/01/%EB%B0%B1%EC%A4%80-1920%EB%B2%88-%EC%88%98-%EC%B0%BE%EA%B8%B0/</id>
    <published>2020-09-01T09:04:27.000Z</published>
    <updated>2020-11-03T08:14:35.469Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/1920">https://www.acmicpc.net/problem/1920</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span>(BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in))) &#123;</span><br><span class="line">        br.readLine();</span><br><span class="line">        <span class="keyword">int</span>[] array1 = convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">        br.readLine();</span><br><span class="line">        <span class="keyword">int</span>[] array2 = convertStringArrayToIntegerArray(br.readLine().split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] answer = solution(array1, array2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : answer) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] convertStringArrayToIntegerArray(String[] args) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[args.length];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">        array[i++] = Integer.parseInt(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] array1, <span class="keyword">int</span>[] array2) &#123;</span><br><span class="line">    Arrays.sort(array1);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[array2.length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : array2) &#123;</span><br><span class="line">        answer[index++] = Arrays.binarySearch(array1, i) &lt; <span class="number">0</span> ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li><a href="https://ko.wikipedia.org/wiki/%EC%9D%B4%EC%A7%84_%EA%B2%80%EC%83%89_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98">이진 탐색(Binary Search)</a>을 위해 검색 할 array를 우선 정렬한다.</li><li>array에 value가 존재하면 1, 없으면 0으로 저장하기 위한 answer array를 생성한다.</li><li>array에 value가 존재하는 지 확인하기 위해 array2를 돌면서 element를 꺼낸다.</li><li>꺼낸 element를 이진 탐색으로 array안에서 검색해서 존재하면 1, 아니면 0을 저장한다.</li><li>결과를 return 한다.</li><li>끝.</li></ol><h3 id="Arrays-binarySearch"><a href="#Arrays-binarySearch" class="headerlink" title="Arrays.binarySearch"></a>Arrays.binarySearch</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> binarySearch0(a, <span class="number">0</span>, a.length, key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Like public version, but without range checks.</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch0</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> fromIndex, <span class="keyword">int</span> toIndex,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = fromIndex;</span><br><span class="line">    <span class="keyword">int</span> high = toIndex - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (low + high) &gt;&gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> midVal = a[mid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (midVal &lt; key)</span><br><span class="line">            low = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (midVal &gt; key)</span><br><span class="line">            high = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> mid; <span class="comment">// key found</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -(low + <span class="number">1</span>);  <span class="comment">// key not found.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>기준이 되는 array와 array에서 검색 할 value(key)를 입력 받는다.</li><li>from index가 to index보다 작거나 같은 동안 반복하면서</li><li>두 index를 더한 값을 &gt;&gt;&gt; 연산을 통해 나눈다.<ol><li>ex) 15(10) -&gt; 1111(2), 15 &gt;&gt;&gt; 1 = 1111 &gt;&gt;&gt; 1 이므로, 0111(2)가 되고 이는 10진수 7이므로 15를 2로 나눈 값과 같다.</li><li>‘&gt;&gt;’ 연산은 부호 비트를 보존하고, ‘&gt;&gt;&gt;’ 연산은 부호 비트 관계없이 무조건 0으로 채운다.</li></ol></li><li>중간이 되는 index를 구해서 array의 중간 값을 구한 후</li><li>현재 값이 중간 값 보다 작은 지 큰지 비교하면서 array에 존재하는지 확인하고</li><li>존재한다면 array에서 현재 값의 index를 return하고</li><li>존재하지 않는 다면 array에서 현재 값의 가장 가까운 index를 음수로 return 한다.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="/images/20200901/%EA%B2%B0%EA%B3%BC.PNG" alt="결과"></p><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">13</span>, <span class="number">18</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">5</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">2</span>&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1920&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="수학" scheme="https://jungguji.github.io/tags/%EC%88%98%ED%95%99/"/>
    
  </entry>
  
  <entry>
    <title>백준 2869번: 달팽이는 올라가고 싶다</title>
    <link href="https://jungguji.github.io/2020/08/20/%EB%B0%B1%EC%A4%80-%EB%8B%AC%ED%8C%BD%EC%9D%B4%EB%8A%94-%EC%98%AC%EB%9D%BC%EA%B0%80%EA%B3%A0-%EC%8B%B6%EB%8B%A4/"/>
    <id>https://jungguji.github.io/2020/08/20/%EB%B0%B1%EC%A4%80-%EB%8B%AC%ED%8C%BD%EC%9D%B4%EB%8A%94-%EC%98%AC%EB%9D%BC%EA%B0%80%EA%B3%A0-%EC%8B%B6%EB%8B%A4/</id>
    <published>2020-08-20T07:29:28.000Z</published>
    <updated>2020-11-03T08:14:35.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/2869">https://www.acmicpc.net/problem/2869</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 달팽이는<span class="title">_</span>올라가고<span class="title">_</span>싶다 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String[] input = getInputData(System.in).split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">int</span>[] abv = convertStringArrayToIntegerArray(input);</span><br><span class="line"></span><br><span class="line">        System.out.println(solution(abv));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getInputData</span><span class="params">(InputStream in)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in))) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> br.readLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] convertStringArrayToIntegerArray(String[] args) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[args.length];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">            array[i++] = Integer.parseInt(str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span>[] abv)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (abv[<span class="number">2</span>] - abv[<span class="number">1</span>] - <span class="number">1</span>) / (abv[<span class="number">0</span>] - abv[<span class="number">1</span>]) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>달팽이는 하루에 A 만큼 올라가는데 자면서 B만큼 미끄러지므로 하루에 (A - B) 만큼 씩 올라가서 V미터 만큼 올라가면 된다.</li><li>하지만 꼭대기에 도달하면 미끄러지지 않는다고 하였으므로, 꼭대기(V) 에서 미끄러지는 만큼(B) 을 뺀 거리만큼만 올라가면 된다. (V - B)</li><li>그럼 수식은 (V - B) / (A / B)가 되고 int형은 소수점을 없애므로 나누어떨어지지 않으면 + 1을 하는데</li><li>(V - B)에서 - 1을 먼저하고 무조건 1을 더한다.</li></ol><h3 id="V-B-1-A-B-1"><a href="#V-B-1-A-B-1" class="headerlink" title="(V - B - 1) / (A - B) + 1"></a>(V - B - 1) / (A - B) + 1</h3><ul><li>V-B를 X, A-B를 y로 가정</li></ul><ol><li>x/y가 나누어 떨어지는 경우<ol><li>x / y = d 일 때 (x-1)/y 는 반드시 d보다 작다.</li><li>int형은 소수점 아래를 없애므로 x-1 /y = d - 1이 되고,</li><li>+1을 하면 d가 된다.</li></ol></li><li>x/y가 나누어 떨어지지 않는 경우<ol><li>x / y = d + f  일 때 y를 양변에 곱하면</li><li>x = y(d + f)  여기서 양변에 1을 빼면,</li><li>x - 1 = y(d + f) - 1  여기서 y를 양변에 나누면</li><li>(x - 1) / y = (d + f) -1 / y  이 된다.</li><li>이 때 1 / y 는  y &gt;= 2  이고 int형은 소수점 아래를 없애버리므로 1 / y 는 없어진다.<ol><li>y &gt;= 2  인 이유는 현재 x / y가 나누어 떨어지지 않는 경우임을 상정하고 있으므로 y가 1이면 나누어 떨어지기 때문에 y는 2보다 크게 된다.</li></ol></li><li>그럼  (x - 1) / y = d + f  이 되고 +1을 하면,</li><li>(x - 1) / y + 1 = d + f + 1  된다.</li></ol></li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><p><img src="/images/20200820/%EA%B2%B0%EA%B3%BC.PNG" alt="결과"></p><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="number">4</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">2</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">6</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">999999901</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">100</span>,<span class="number">99</span>,<span class="number">1000000000</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">1</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">5</span>,<span class="number">0</span>,<span class="number">5</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">4</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">2</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">100</span>,<span class="number">1</span>,<span class="number">101</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">3</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">6</span>&#125;));</span><br></pre></td></tr></table></figure><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://hyunah030.tistory.com/8">https://hyunah030.tistory.com/8</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2869&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="수학" scheme="https://jungguji.github.io/tags/%EC%88%98%ED%95%99/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 압축</title>
    <link href="https://jungguji.github.io/2020/08/06/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%95%95%EC%B6%95/"/>
    <id>https://jungguji.github.io/2020/08/06/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%95%95%EC%B6%95/</id>
    <published>2020-08-06T09:11:42.000Z</published>
    <updated>2020-11-03T08:14:35.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17684">https://programmers.co.kr/learn/courses/30/lessons/17684</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CAPITAL_A = <span class="number">65</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Character LAST_INIT_ALPHABET = <span class="string">&#x27;Z&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] solution(String msg) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] answer = getDictionaryIndex(msg.toCharArray(), initIndexMap());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Map&lt;String, Integer&gt; <span class="title">initIndexMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Integer&gt; indexMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    Character start = CAPITAL_A;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (start &lt;= LAST_INIT_ALPHABET) &#123;</span><br><span class="line"></span><br><span class="line">        indexMap.put(String.valueOf(start), i);</span><br><span class="line"></span><br><span class="line">        ++start;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> indexMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] getDictionaryIndex(<span class="keyword">char</span>[] charArray, Map&lt;String, Integer&gt; indexMap) &#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> arrayLength = charArray.length;</span><br><span class="line">    <span class="keyword">int</span> lastIndex = indexMap.get(String.valueOf(LAST_INIT_ALPHABET));</span><br><span class="line"></span><br><span class="line">    List&lt;Integer&gt; answer = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; arrayLength) &#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> jump = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; arrayLength; j++) &#123;</span><br><span class="line">            sb.append(charArray[j]);</span><br><span class="line"></span><br><span class="line">            String key = sb.toString();</span><br><span class="line">            <span class="keyword">if</span> (indexMap.containsKey(key)) &#123;</span><br><span class="line">                value = indexMap.get(key);</span><br><span class="line">                jump++;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (j +<span class="number">1</span> == arrayLength) &#123;</span><br><span class="line">                    answer.add(value);</span><br><span class="line">                    i += jump;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            answer.add(value);</span><br><span class="line">            i += jump;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!indexMap.containsKey(sb.toString())) &#123;</span><br><span class="line">            indexMap.put(sb.toString(), ++lastIndex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sb.setLength(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer.stream().mapToInt(index -&gt; index).toArray();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>A부터 Z를 Key로 하는 Map을 만든다.</li><li>압축 할 문자열의 길이만큼 반복한다.</li><li>돌면서 현재 문자가 Map에 key에 포함되는지 확인한다.</li><li>이미 포함되어 있으면(처음엔 A~Z) 해당 문자의 index를 뽑아내기 위해 value를 꺼내서 저장한다.</li><li>이번 문자는 포함되어 있으므로 그 다음 문자열의 index까지 점프하기 위해 jump 변수를 증가시킨다.</li><li>현재 문자가 문자열의 마지막 문자라면 더 이상 사전에서 검색 할 수 없으므로,</li><li>문자열의 index 즉, value를 List에 저장하고 i를 jump 만큼 더해서 문자열의 index를 증가시킨다.</li><li>이미 사전에 있는 문자이므로 continue해서 끝내지 않고 반복문을 올라가서 문자를 더한다.<ol><li>A가 포함되어 있으면 A 뒤문자인 B를 더해서 AB가 존재하는지 찾기 위해</li></ol></li><li>사전에 포함되어 있지 않는다면(Map에 key로 존재하지 않는다면)</li><li>이전에 검색했던 문자의 index를 저장하고 i를 jump 시킨 후 반복문을 벗어난다.</li><li>그 후 사전에 존재 하지 않았던 문자를 사전에 등록, Map에 key, lastIndex에서 + 1해서 Map에 추가하고, 문자를 저장했던 StringBuilder를 초기화 시킨다.</li><li>문자열 모두 검색 할 때까지 반복한다.</li><li>사전에서 검색한 index를 저장한 List를 array로 변경한 후 return 한다.</li><li>끝.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (6.64ms, 53MB)</td></tr><tr><td>테스트 2</td><td>통과 (6.30ms, 52.9MB)</td></tr><tr><td>테스트 3</td><td>통과 (5.29ms, 50.3MB)</td></tr><tr><td>테스트 4</td><td>통과 (9.62ms, 53MB)</td></tr><tr><td>테스트 5</td><td>통과 (5.94ms, 51.1MB)</td></tr><tr><td>테스트 6</td><td>통과 (10.26ms, 52.8MB)</td></tr><tr><td>테스트 7</td><td>통과 (7.65ms, 51MB)</td></tr><tr><td>테스트 8</td><td>통과 (8.38ms, 52.8MB)</td></tr><tr><td>테스트 9</td><td>통과 (6.01ms, 52.5MB)</td></tr><tr><td>테스트 10</td><td>통과 (11.33ms, 53MB)</td></tr><tr><td>테스트 11</td><td>통과 (8.25ms, 51.6MB)</td></tr><tr><td>테스트 12</td><td>통과 (8.79ms, 51.3MB)</td></tr><tr><td>테스트 13</td><td>통과 (9.26ms, 53.6MB)</td></tr><tr><td>테스트 14</td><td>통과 (9.22ms, 51.5MB)</td></tr><tr><td>테스트 15</td><td>통과 (10.26ms, 53MB)</td></tr><tr><td>테스트 16</td><td>통과 (8.91ms, 53.5MB)</td></tr><tr><td>테스트 17</td><td>통과 (10.89ms, 53.2MB)</td></tr><tr><td>테스트 18</td><td>통과 (7.93ms, 53.2MB)</td></tr><tr><td>테스트 19</td><td>통과 (8.32ms, 53.1MB)</td></tr><tr><td>테스트 20</td><td>통과 (8.10ms, 50.8MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">11</span>, <span class="number">1</span>, <span class="number">27</span>, <span class="number">15</span>&#125;, test.solution(<span class="string">&quot;KAKAO&quot;</span>));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">20</span>, <span class="number">15</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">27</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">36</span>, <span class="number">30</span>, <span class="number">32</span>, <span class="number">34</span>&#125;, test.solution(<span class="string">&quot;TOBEORNOTTOBEORTOBEORNOT&quot;</span>));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">27</span>, <span class="number">29</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>&#125;, test.solution(<span class="string">&quot;ABABABABABABABAB&quot;</span>));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">20</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">20</span>, <span class="number">27</span>, <span class="number">29</span>, <span class="number">9</span>, <span class="number">19</span>, <span class="number">33</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">33</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">39</span>, <span class="number">19</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">36</span>, <span class="number">9</span>, <span class="number">39</span>, <span class="number">46</span>, <span class="number">38</span>, <span class="number">47</span>, <span class="number">34</span>, <span class="number">19</span>, <span class="number">36</span>, <span class="number">52</span>, <span class="number">45</span>, <span class="number">40</span>, <span class="number">42</span>, <span class="number">35</span>, <span class="number">38</span>, <span class="number">48</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">51</span>, <span class="number">61</span>, <span class="number">53</span>, <span class="number">55</span>, <span class="number">66</span>, <span class="number">57</span>, <span class="number">44</span>, <span class="number">59</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">49</span>, <span class="number">60</span>, <span class="number">29</span>, <span class="number">52</span>, <span class="number">76</span>, <span class="number">37</span>, <span class="number">32</span>, <span class="number">71</span>, <span class="number">43</span>, <span class="number">70</span>, <span class="number">47</span>, <span class="number">75</span>, <span class="number">73</span>, <span class="number">80</span>, <span class="number">43</span>, <span class="number">79</span>, <span class="number">56</span>, <span class="number">72</span>, <span class="number">84</span>, <span class="number">61</span>, <span class="number">86</span>, <span class="number">68</span>, <span class="number">81</span>, <span class="number">90</span>, <span class="number">69</span>, <span class="number">92</span>, <span class="number">72</span>, <span class="number">85</span>, <span class="number">63</span>, <span class="number">96</span>, <span class="number">89</span>, <span class="number">87</span>, <span class="number">91</span>, <span class="number">83</span>, <span class="number">101</span>, <span class="number">94</span>, <span class="number">103</span>, <span class="number">65</span>, <span class="number">97</span>, <span class="number">106</span>, <span class="number">99</span>, <span class="number">108</span>, <span class="number">50</span>, <span class="number">74</span>, <span class="number">111</span>, <span class="number">77</span>, <span class="number">66</span>, <span class="number">98</span>, <span class="number">81</span>, <span class="number">70</span>, <span class="number">93</span>, <span class="number">118</span>, <span class="number">117</span>, <span class="number">88</span>, <span class="number">33</span>, <span class="number">122</span>, <span class="number">116</span>, <span class="number">58</span>, <span class="number">127</span>, <span class="number">62</span>, <span class="number">127</span>, <span class="number">78</span>, <span class="number">114</span>, <span class="number">123</span>, <span class="number">100</span>, <span class="number">133</span>, <span class="number">95</span>, <span class="number">112</span>, <span class="number">105</span>, <span class="number">104</span>, <span class="number">132</span>, <span class="number">145</span>, <span class="number">87</span>, <span class="number">134</span>, <span class="number">130</span>, <span class="number">129</span>, <span class="number">137</span>, <span class="number">131</span>, <span class="number">82</span>, <span class="number">79</span>, <span class="number">148</span>, <span class="number">151</span>, <span class="number">150</span>, <span class="number">144</span>, <span class="number">153</span>, <span class="number">159</span>, <span class="number">102</span>, <span class="number">135</span>, <span class="number">121</span>, <span class="number">156</span>, <span class="number">159</span>, <span class="number">125</span>, <span class="number">75</span>, <span class="number">162</span>, <span class="number">113</span>, <span class="number">158</span>, <span class="number">124</span>, <span class="number">109</span>, <span class="number">126</span>, <span class="number">149</span>, <span class="number">67</span>, <span class="number">142</span>, <span class="number">146</span>, <span class="number">166</span>, <span class="number">155</span>, <span class="number">158</span>, <span class="number">174</span>, <span class="number">171</span>, <span class="number">140</span>, <span class="number">119</span>, <span class="number">128</span>, <span class="number">175</span>, <span class="number">120</span>, <span class="number">138</span>, <span class="number">152</span>, <span class="number">161</span>, <span class="number">174</span>, <span class="number">181</span>, <span class="number">139</span>, <span class="number">154</span>, <span class="number">141</span>, <span class="number">187</span>, <span class="number">143</span>, <span class="number">176</span>, <span class="number">165</span>, <span class="number">172</span>, <span class="number">167</span>, <span class="number">191</span>, <span class="number">164</span>, <span class="number">182</span>, <span class="number">194</span>, <span class="number">184</span>, <span class="number">136</span>, <span class="number">170</span>, <span class="number">193</span>, <span class="number">147</span>, <span class="number">86</span>&#125;, test.solution(<span class="string">&quotquot;</span>));</span><br></pre></td></tr></table></figure><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><ul><li>코드의 퀄리티가 썩 마음에 들지 않는다.</li><li>시간 날 때 리팩토링을 꼭 해야 할 듯 싶다.</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17684&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: n진수 게임</title>
    <link href="https://jungguji.github.io/2020/08/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-n%EC%A7%84%EC%88%98-%EA%B2%8C%EC%9E%84/"/>
    <id>https://jungguji.github.io/2020/08/03/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-n%EC%A7%84%EC%88%98-%EA%B2%8C%EC%9E%84/</id>
    <published>2020-08-03T08:03:33.000Z</published>
    <updated>2020-11-03T08:14:35.481Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17687">https://programmers.co.kr/learn/courses/30/lessons/17687</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] ABCDEF = <span class="keyword">new</span> String[] &#123;<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>,<span class="string">&quot;D&quot;</span>,<span class="string">&quot;E&quot;</span>,<span class="string">&quot;F&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> t, <span class="keyword">int</span> m, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> limit = t * m;</span><br><span class="line">    String speakString = make(n, limit);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>[] toChar = speakString.toCharArray();</span><br><span class="line"></span><br><span class="line">    StringBuilder answer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> index = p - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t; i++) &#123;</span><br><span class="line">        answer.append(toChar[index]);</span><br><span class="line">        index += m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">make</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> limit)</span> </span>&#123;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder().append(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; limit; i++) &#123;</span><br><span class="line">        sb.append(changeDecimal(i, n));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">char</span>[] changeDecimal(<span class="keyword">int</span> currentNumber, <span class="keyword">int</span> n) &#123;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">while</span>(currentNumber &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> remain = currentNumber % n;</span><br><span class="line">        sb.append(remain &gt;= <span class="number">10</span> ? ABCDEF[remain-<span class="number">10</span>] : remain);</span><br><span class="line">        currentNumber /= n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sb.reverse().toString().toCharArray();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ul><li>진법 n, 미리 구할 숫자의 갯수 t, 게임에 참가하는 인원 m, 튜브의 순서 p</li></ul><ol><li>미리 구할 숫자의 갯수와 참가 인원 수를 곱해서 구해야 할 수의 갯수를 구한다.</li><li>1부터 구해야 될 수까지 반복한다.</li><li>반복하면서 숫자를 진법으로 나눈 나머지를 구한다.</li><li>나머지가 10 이상이면 A, B, C … 으로 치환한다.</li><li>현재 수를 n 진법의 값만큼 나눈다.</li><li>작은 수부터 역순으로 저장되어야 하므로 reverse() 메서드로 역순으로 돌린다.</li><li>0부터 미리 구할 숫자 갯수만큼 반복하면서</li><li>n진법으로 치환한 문자열에서 참가인원 숫자만큼 더하면서 숫자를 뽑아 저장한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (0.87ms, 50.6MB)</td></tr><tr><td>테스트 2</td><td>통과 (1.15ms, 50.5MB)</td></tr><tr><td>테스트 3</td><td>통과 (1.02ms, 52MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.07ms, 52.1MB)</td></tr><tr><td>테스트 5</td><td>통과 (4.60ms, 52.6MB)</td></tr><tr><td>테스트 6</td><td>통과 (4.40ms, 52.2MB)</td></tr><tr><td>테스트 7</td><td>통과 (4.55ms, 53MB)</td></tr><tr><td>테스트 8</td><td>통과 (2.62ms, 52.3MB)</td></tr><tr><td>테스트 9</td><td>통과 (2.45ms, 52.6MB)</td></tr><tr><td>테스트 10</td><td>통과 (2.57ms, 52.3MB)</td></tr><tr><td>테스트 11</td><td>통과 (2.49ms, 52MB)</td></tr><tr><td>테스트 12</td><td>통과 (2.45ms, 52.7MB)</td></tr><tr><td>테스트 13</td><td>통과 (5.32ms, 50.3MB)</td></tr><tr><td>테스트 14</td><td>통과 (69.61ms, 77.9MB)</td></tr><tr><td>테스트 15</td><td>통과 (75.19ms, 75.8MB)</td></tr><tr><td>테스트 16</td><td>통과 (70.55ms, 78.1MB)</td></tr><tr><td>테스트 17</td><td>통과 (17.09ms, 53.3MB)</td></tr><tr><td>테스트 18</td><td>통과 (15.42ms, 52.7MB)</td></tr><tr><td>테스트 19</td><td>통과 (6.46ms, 52.6MB)</td></tr><tr><td>테스트 20</td><td>통과 (13.17ms, 53MB)</td></tr><tr><td>테스트 21</td><td>통과 (29.51ms, 58.7MB)</td></tr><tr><td>테스트 22</td><td>통과 (21.20ms, 56.5MB)</td></tr><tr><td>테스트 23</td><td>통과 (41.04ms, 64.1MB)</td></tr><tr><td>테스트 24</td><td>통과 (59.00ms, 77.4MB)</td></tr><tr><td>테스트 25</td><td>통과 (74.66ms, 80MB)</td></tr><tr><td>테스트 26</td><td>통과 (24.89ms, 54.3MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="string">&quot;0111&quot;</span>, test.solution(<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">assertEquals(<span class="string">&quot;02468ACE11111111&quot;</span>, test.solution(<span class="number">16</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">1</span>));</span><br><span class="line">assertEquals(<span class="string">&quot;13579BDF01234567&quot;</span>, test.solution(<span class="number">16</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">2</span>));</span><br></pre></td></tr></table></figure><h2 id="참고사이트"><a href="#참고사이트" class="headerlink" title="참고사이트"></a>참고사이트</h2><ul><li><a href="https://tech.kakao.com/2017/11/14/kakao-blind-recruitment-round-3/">https://tech.kakao.com/2017/11/14/kakao-blind-recruitment-round-3/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17687&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 예상 대진표</title>
    <link href="https://jungguji.github.io/2020/07/30/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%98%88%EC%83%81-%EB%8C%80%EC%A7%84%ED%91%9C/"/>
    <id>https://jungguji.github.io/2020/07/30/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%98%88%EC%83%81-%EB%8C%80%EC%A7%84%ED%91%9C/</id>
    <published>2020-07-30T07:00:07.000Z</published>
    <updated>2020-11-03T08:14:35.501Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>프로그래머스: 캐시</title>
    <link href="https://jungguji.github.io/2020/07/24/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BA%90%EC%8B%9C/"/>
    <id>https://jungguji.github.io/2020/07/24/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%BA%90%EC%8B%9C/</id>
    <published>2020-07-24T07:34:42.000Z</published>
    <updated>2020-11-03T08:14:35.508Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17680">https://programmers.co.kr/learn/courses/30/lessons/17680</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MISS_RUN_TIME = <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span> cacheSize, String[] cities)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cacheSize == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> cities.length * MISS_RUN_TIME;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Integer&gt; lru = <span class="keyword">new</span> LinkedHashMap&lt;String, Integer&gt;(cacheSize, <span class="number">1</span>, <span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeEldestEntry</span><span class="params">(Map.Entry&lt;String, Integer&gt; eldest)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> size() &gt; cacheSize;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(String key : cities) &#123;</span><br><span class="line">        key = key.toLowerCase();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(lru.containsKey(key)) &#123;</span><br><span class="line">            lru.get(key);</span><br><span class="line">            answer += <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            lru.put(key, <span class="number">0</span>);</span><br><span class="line">            answer += MISS_RUN_TIME;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>캐시가 0인 경우엔 캐시에 저장 할 수 없으니 항상 miss 이므로 배열의 크기 만큼 5를 곱해서 return 한다.</li><li>LinkedHashMap의 경우 accessOrder parameter를 통해 Map의 순서를 access 기준으로 변경 할 수 있는데 우리는 LRU, 즉 가장 오래 사용되지 않은 데이터를 삭제 해야하므로 accessOrder를 true로 갖는 생성자로 LinkedHashMap 인스턴스를 생성한다.</li><li>그 후 removeEldestEntry()를 override해서 캐시의 크기보다 Map의 사이즈가 커질 경우 가장 오래 사용되지 않은 데이터를 삭제하도록 수정한다.</li><li>배열에서 문자열을 가져오면서 Map에 저장되어 있는지 비교한다.</li><li>Map에 저장되어 있다면, get()을 통해 access하고 1초를 더한다.</li><li>저장되어 있지 않다면, put 하는데 이 때 Map의 크기가 캐시보다 크다면 아까 Override 한 removeEldestEntry()에 의해 가장 오래 사용되지 않은 값이 삭제되면서 지금 put한 데이터가 추가한다.</li><li>캐시에 없는 데이터를 추가했으니 5초를 더한다.</li><li>모든 초를 더한 값을 return 한다.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (1.11ms, 52.1MB)</td></tr><tr><td>테스트 2</td><td>통과 (1.20ms, 52.2MB)</td></tr><tr><td>테스트 3</td><td>통과 (1.08ms, 50.9MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.23ms, 51.7MB)</td></tr><tr><td>테스트 5</td><td>통과 (0.94ms, 52.4MB)</td></tr><tr><td>테스트 6</td><td>통과 (0.78ms, 50.2MB)</td></tr><tr><td>테스트 7</td><td>통과 (0.78ms, 52.2MB)</td></tr><tr><td>테스트 8</td><td>통과 (1.12ms, 52.7MB)</td></tr><tr><td>테스트 9</td><td>통과 (1.15ms, 50.8MB)</td></tr><tr><td>테스트 10</td><td>통과 (1.34ms, 52.4MB)</td></tr><tr><td>테스트 11</td><td>통과 (45.53ms, 89.6MB)</td></tr><tr><td>테스트 12</td><td>통과 (1.45ms, 52.5MB)</td></tr><tr><td>테스트 13</td><td>통과 (1.43ms, 52.5MB)</td></tr><tr><td>테스트 14</td><td>통과 (1.69ms, 52.7MB)</td></tr><tr><td>테스트 15</td><td>통과 (2.42ms, 50.5MB)</td></tr><tr><td>테스트 16</td><td>통과 (2.85ms, 52.9MB)</td></tr><tr><td>테스트 17</td><td>통과 (0.78ms, 52MB)</td></tr><tr><td>테스트 18</td><td>통과 (4.34ms, 53.5MB)</td></tr><tr><td>테스트 19</td><td>통과 (4.28ms, 53.3MB)</td></tr><tr><td>테스트 20</td><td>통과 (4.15ms, 50.9MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="number">42</span>, test.solution(<span class="number">3</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">50</span>, test.solution(<span class="number">3</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">21</span>, test.solution(<span class="number">3</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">60</span>, test.solution(<span class="number">2</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;SanFrancisco&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;Rome&quot;</span>, <span class="string">&quot;Paris&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;Rome&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">52</span>, test.solution(<span class="number">5</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;SanFrancisco&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;Rome&quot;</span>, <span class="string">&quot;Paris&quot;</span>, <span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;Rome&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">16</span>, test.solution(<span class="number">2</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;newyork&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">25</span>, test.solution(<span class="number">0</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Jeju&quot;</span>, <span class="string">&quot;Pangyo&quot;</span>, <span class="string">&quot;Seoul&quot;</span>, <span class="string">&quot;NewYork&quot;</span>, <span class="string">&quot;LA&quot;</span>&#125;));</span><br><span class="line">assertEquals(<span class="number">18</span>, test.solution(<span class="number">1</span>, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>, <span class="string">&quot;LA&quot;</span>&#125;));</span><br></pre></td></tr></table></figure><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html">https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17680&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 카펫</title>
    <link href="https://jungguji.github.io/2020/07/20/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%B9%B4%ED%8E%AB/"/>
    <id>https://jungguji.github.io/2020/07/20/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%B9%B4%ED%8E%AB/</id>
    <published>2020-07-20T05:25:22.000Z</published>
    <updated>2020-11-03T08:14:35.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42842">https://programmers.co.kr/learn/courses/30/lessons/42842</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span> brown, <span class="keyword">int</span> yellow) &#123;</span><br><span class="line">    <span class="keyword">int</span> sum = brown + yellow;</span><br><span class="line">    <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; sum; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum % i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = ((sum / i) * <span class="number">2</span>) + ((i * <span class="number">2</span>) - <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">int</span> y = sum - x;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (brown == x &amp;&amp; yellow == y) &#123;</span><br><span class="line">                answer = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;sum / i, i&#125;;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>갈색과 노란색을 더해 전체 크기를 구한다.</li><li>전체 크기를 2부터 반복한다. (1인 경우는 없으므로)</li><li>i로 sum을 나눠서 떨어진다면, 즉 약수라면</li><li>sum에서 i를 나눈 값에 2를 곱해서 위 아래 가로의 길이를 구하고</li><li>i에 마찬가지로 2를 곱해서 좌 우 세로의 길이를 구하고</li><li>꼭지점들은 가로 세로가 겹치므로 -4를 한다.</li><li>이렇게 구한 갈색을 sum에서 빼서 노란색의 값을 구한다.</li><li>구한 갈색과 노란색 값이 넘겨받은 brown과 yellow와 같으면 끝</li><li>아니라면 반복한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (1.57ms, 52.3MB)</td></tr><tr><td>테스트 2</td><td>통과 (1.76ms, 51.1MB)</td></tr><tr><td>테스트 3</td><td>통과 (1.88ms, 50.1MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.44ms, 52.7MB)</td></tr><tr><td>테스트 5</td><td>통과 (1.52ms, 50.5MB)</td></tr><tr><td>테스트 6</td><td>통과 (1.48ms, 49.8MB)</td></tr><tr><td>테스트 7</td><td>통과 (1.62ms, 50.8MB)</td></tr><tr><td>테스트 8</td><td>통과 (1.52ms, 52.6MB)</td></tr><tr><td>테스트 9</td><td>통과 (1.58ms, 52.4MB)</td></tr><tr><td>테스트 10</td><td>통과 (1.58ms, 50.4MB)</td></tr><tr><td>테스트 11</td><td>통과 (1.53ms, 53MB)</td></tr><tr><td>테스트 12</td><td>통과 (1.56ms, 52.3MB)</td></tr><tr><td>테스트 13</td><td>통과 (1.48ms, 53.3MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">4</span>, <span class="number">3</span>&#125;, test.solution(<span class="number">10</span>, <span class="number">2</span>));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">3</span>&#125;, test.solution(<span class="number">8</span>, <span class="number">1</span>));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">8</span>, <span class="number">6</span>&#125;, test.solution(<span class="number">24</span>, <span class="number">24</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42842&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 오픈채팅방</title>
    <link href="https://jungguji.github.io/2020/07/19/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%98%A4%ED%94%88%EC%B1%84%ED%8C%85%EB%B0%A9/"/>
    <id>https://jungguji.github.io/2020/07/19/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EC%98%A4%ED%94%88%EC%B1%84%ED%8C%85%EB%B0%A9/</id>
    <published>2020-07-19T07:59:19.000Z</published>
    <updated>2020-11-03T08:14:35.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42888">https://programmers.co.kr/learn/courses/30/lessons/42888</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ENTER = <span class="string">&quot;Enter&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LEAVE = <span class="string">&quot;Leave&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANGE = <span class="string">&quot;Change&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MESSAGE_ENTER = <span class="string">&quot;님이 들어왔습니다.&quot;</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String MESSAGE_LEAVE = <span class="string">&quot;님이 나갔습니다.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String[] solution(String[] record) &#123;</span><br><span class="line">    List&lt;String[]&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Map&lt;String, String&gt; nickName = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> returnArraySize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String s : record) &#123;</span><br><span class="line">        String[] split = s.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        String[] actionAndUid = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        actionAndUid[<span class="number">0</span>] = split[<span class="number">0</span>];</span><br><span class="line">        actionAndUid[<span class="number">1</span>] = split[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!CHANGE.equals(split[<span class="number">0</span>])) &#123;</span><br><span class="line">            list.add(actionAndUid);</span><br><span class="line">            returnArraySize++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!LEAVE.equals(split[<span class="number">0</span>])) &#123;</span><br><span class="line">            nickName.put(split[<span class="number">1</span>], split[<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String[] answer = <span class="keyword">new</span> String[returnArraySize];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String[] array : list) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (array[<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">case</span> ENTER :</span><br><span class="line">                answer[i] = nickName.get(array[<span class="number">1</span>]) + MESSAGE_ENTER;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEAVE :</span><br><span class="line">                answer[i] = nickName.get(array[<span class="number">1</span>]) + MESSAGE_LEAVE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>문자열을 공백으로 나눠서 행동과 유저의 아이디를 저장하는 배열에 담는다.</li><li>행동이 Change가 아닌 경우엔 채팅방에 입장했거나 나갓다는 문구룰 출력해야 하기 때문에 List에 담는다.</li><li>행동이 Leave가 아닌 경우엔 닉네임이 변경되었거나, 새로 방에 들어온 것이므로 유저 아이디를 key로하는 map에 value로 닉네임을 저장한다.</li><li>모두 저장했으면 List만큼 돌면서 해당 행동에 맞는 문자열을 만들어 저장한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (18.70ms, 54.1MB)</td></tr><tr><td>테스트 2</td><td>통과 (17.35ms, 52.4MB)</td></tr><tr><td>테스트 3</td><td>통과 (17.84ms, 54.4MB)</td></tr><tr><td>테스트 4</td><td>통과 (19.81ms, 54MB)</td></tr><tr><td>테스트 5</td><td>통과 (27.75ms, 56.1MB)</td></tr><tr><td>테스트 6</td><td>통과 (30.38ms, 56.1MB)</td></tr><tr><td>테스트 7</td><td>통과 (35.26ms, 54.4MB)</td></tr><tr><td>테스트 8</td><td>통과 (27.59ms, 55.2MB)</td></tr><tr><td>테스트 9</td><td>통과 (30.72ms, 56.5MB)</td></tr><tr><td>테스트 10</td><td>통과 (28.67ms, 56.1MB)</td></tr><tr><td>테스트 11</td><td>통과 (25.16ms, 56.2MB)</td></tr><tr><td>테스트 12</td><td>통과 (26.04ms, 56.6MB)</td></tr><tr><td>테스트 13</td><td>통과 (26.07ms, 55MB)</td></tr><tr><td>테스트 14</td><td>통과 (43.84ms, 57.2MB)</td></tr><tr><td>테스트 15</td><td>통과 (20.35ms, 52.4MB)</td></tr><tr><td>테스트 16</td><td>통과 (18.03ms, 52.8MB)</td></tr><tr><td>테스트 17</td><td>통과 (19.77ms, 54.2MB)</td></tr><tr><td>테스트 18</td><td>통과 (18.86ms, 52.5MB)</td></tr><tr><td>테스트 19</td><td>통과 (35.94ms, 56.7MB)</td></tr><tr><td>테스트 20</td><td>통과 (26.22ms, 55.5MB)</td></tr><tr><td>테스트 21</td><td>통과 (30.18ms, 56.5MB)</td></tr><tr><td>테스트 22</td><td>통과 (28.53ms, 52.5MB)</td></tr><tr><td>테스트 23</td><td>통과 (29.40ms, 57.5MB)</td></tr><tr><td>테스트 24</td><td>통과 (37.73ms, 57.3MB)</td></tr><tr><td>테스트 25</td><td>통과 (262.95ms, 158MB)</td></tr><tr><td>테스트 26</td><td>통과 (292.57ms, 158MB)</td></tr><tr><td>테스트 27</td><td>통과 (333.29ms, 169MB)</td></tr><tr><td>테스트 28</td><td>통과 (324.94ms, 163MB)</td></tr><tr><td>테스트 29</td><td>통과 (282.87ms, 157MB)</td></tr><tr><td>테스트 30</td><td>통과 (286.21ms, 153MB)</td></tr><tr><td>테스트 31</td><td>통과 (225.37ms, 147MB)</td></tr><tr><td>테스트 32</td><td>통과 (255.96ms, 137MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String[] actual = &#123;<span class="string">&quot;Enter uid1234 Muzi&quot;</span>, <span class="string">&quot;Enter uid4567 Prodo&quot;</span>,<span class="string">&quot;Leave uid1234&quot;</span>,<span class="string">&quot;Enter uid1234 Prodo&quot;</span>,<span class="string">&quot;Change uid4567 Ryan&quot;</span>&#125;;</span><br><span class="line">String[] expected =&#123;<span class="string">&quot;Prodo님이 들어왔습니다.&quot;</span>, <span class="string">&quot;Ryan님이 들어왔습니다.&quot;</span>, <span class="string">&quot;Prodo님이 나갔습니다.&quot;</span>, <span class="string">&quot;Prodo님이 들어왔습니다.&quot;</span>&#125;;</span><br><span class="line">assertArrayEquals(expected, test.solution(actual));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42888&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머스: 행렬의 곱셈</title>
    <link href="https://jungguji.github.io/2020/07/08/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%B1%EC%85%88/"/>
    <id>https://jungguji.github.io/2020/07/08/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%ED%96%89%EB%A0%AC%EC%9D%98-%EA%B3%B1%EC%85%88/</id>
    <published>2020-07-08T08:04:23.000Z</published>
    <updated>2020-11-03T08:14:35.515Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12949">https://programmers.co.kr/learn/courses/30/lessons/12949</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[][] solution(<span class="keyword">int</span>[][] arr1, <span class="keyword">int</span>[][] arr2) &#123;</span><br><span class="line">    <span class="keyword">int</span>[][] answer = <span class="keyword">new</span> <span class="keyword">int</span>[arr1.length][arr2[<span class="number">0</span>].length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr2[<span class="number">0</span>].length; j++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; arr2.length; k++) &#123;</span><br><span class="line">                answer[i][j] += arr1[i][k] * arr2[k][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>행렬의 곱은 앞 행렬의 행과 뒤 행렬의 열을 곱한 것과 같다.<ul><li>ex) 앞 행렬이 m x n 크기이고 뒤 행렬이 n x r 크기인 경우 곱은 m x r크기의 행렬이 된다.</li></ul></li><li>곱 행렬(0, 0)은 앞 행렬의 (0, 0) X 뒷 행렬 (0, 0) + 앞 행렬 (0, 1) X 뒷 행렬 (1, 0)</li><li>(0, 1)은 (0, 0) X (0, 1) + (0, 1) X (1, 1)</li><li>(1, 0)은 (1, 0) X (0, 0) + (1, 1) X (0, 1)</li><li>(1, 1)은 (1, 0) X (0, 1) + (1, 1) X (1, 1)</li><li>(2, 0)은 (2, 0) X (0, 0) + (2, 1) X (0, 1)</li><li>(2, 1)은 (2, 0) X (0, 1) + (2, 1) X (1, 1)</li><li>이런식으로 진행된다.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (2.93ms, 54.1MB)</td></tr><tr><td>테스트 2</td><td>통과 (10.09ms, 54.3MB)</td></tr><tr><td>테스트 3</td><td>통과 (17.85ms, 56.7MB)</td></tr><tr><td>테스트 4</td><td>통과 (2.02ms, 50.9MB)</td></tr><tr><td>테스트 5</td><td>통과 (8.78ms, 53.7MB)</td></tr><tr><td>테스트 6</td><td>통과 (9.40ms, 56.2MB)</td></tr><tr><td>테스트 7</td><td>통과 (1.56ms, 52.3MB)</td></tr><tr><td>테스트 8</td><td>통과 (1.80ms, 50.7MB)</td></tr><tr><td>테스트 9</td><td>통과 (1.79ms, 50.1MB)</td></tr><tr><td>테스트 10</td><td>통과 (8.66ms, 54.9MB)</td></tr><tr><td>테스트 11</td><td>통과 (3.37ms, 52.3MB)</td></tr><tr><td>테스트 12</td><td>통과 (2.05ms, 54.6MB)</td></tr><tr><td>테스트 13</td><td>통과 (9.96ms, 54.1MB)</td></tr><tr><td>테스트 14</td><td>통과 (10.60ms, 54.3MB)</td></tr><tr><td>테스트 15</td><td>통과 (7.94ms, 54.1MB)</td></tr><tr><td>테스트 16</td><td>통과 (4.86ms, 54.6MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">15</span>, <span class="number">15</span>&#125;, &#123;<span class="number">15</span>, <span class="number">15</span>&#125;, &#123;<span class="number">15</span>, <span class="number">15</span>&#125;&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>, <span class="number">4</span>&#125;, &#123;<span class="number">3</span>, <span class="number">2</span>&#125;, &#123;<span class="number">4</span>, <span class="number">1</span>&#125;&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">3</span>, <span class="number">3</span>&#125;, &#123;<span class="number">3</span>, <span class="number">3</span>&#125;&#125;));</span><br><span class="line">assertArrayEquals(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">22</span>, <span class="number">22</span>, <span class="number">11</span>&#125;, &#123;<span class="number">36</span>, <span class="number">28</span>, <span class="number">18</span>&#125;, &#123;<span class="number">29</span>, <span class="number">20</span>, <span class="number">14</span>&#125;&#125;, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>&#125;, &#123;<span class="number">4</span>, <span class="number">2</span>, <span class="number">4</span>&#125;, &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>&#125;&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>&#125;, &#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>&#125;, &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>&#125;&#125;));</span><br></pre></td></tr></table></figure><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://namu.wiki/w/%ED%96%89%EB%A0%AC(%EC%88%98%ED%95%99)">https://namu.wiki/w/%ED%96%89%EB%A0%AC(%EC%88%98%ED%95%99)</a></li><li><a href="https://mathbang.net/562">https://mathbang.net/562</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12949&quot;&gt;htt</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>프로그래머스: 땅따먹기</title>
    <link href="https://jungguji.github.io/2020/07/07/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%95%85%EB%94%B0%EB%A8%B9%EA%B8%B0/"/>
    <id>https://jungguji.github.io/2020/07/07/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%95%85%EB%94%B0%EB%A8%B9%EA%B8%B0/</id>
    <published>2020-07-07T07:31:13.000Z</published>
    <updated>2020-11-03T08:14:35.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12913">https://programmers.co.kr/learn/courses/30/lessons/12913</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solution</span><span class="params">(<span class="keyword">int</span>[][] land)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = land.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">int</span> rowIndex = i + <span class="number">1</span>;</span><br><span class="line">        land[i][<span class="number">0</span>] += max(land[rowIndex][<span class="number">1</span>], max(land[rowIndex][<span class="number">2</span>], land[rowIndex][<span class="number">3</span>]));</span><br><span class="line">        land[i][<span class="number">1</span>] += max(land[rowIndex][<span class="number">0</span>], max(land[rowIndex][<span class="number">2</span>], land[rowIndex][<span class="number">3</span>]));</span><br><span class="line">        land[i][<span class="number">2</span>] += max(land[rowIndex][<span class="number">0</span>], max(land[rowIndex][<span class="number">1</span>], land[rowIndex][<span class="number">3</span>]));</span><br><span class="line">        land[i][<span class="number">3</span>] += max(land[rowIndex][<span class="number">0</span>], max(land[rowIndex][<span class="number">1</span>], land[rowIndex][<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> answer = max(land[<span class="number">0</span>][<span class="number">0</span>], max(land[<span class="number">0</span>][<span class="number">1</span>], max(land[<span class="number">0</span>][<span class="number">2</span>], land[<span class="number">0</span>][<span class="number">3</span>])));</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>마지막 행 전행 부터 반복문을 시작해서 i가 0이 될 때까지 반복한다.</li><li>i행의 각 인덱스에는 자기 자신의 열을 제외한 이전 행의 값 중 가장 큰 값과 자기 자신의 값을 더한 값을 저장한다.</li><li>위 과정을 반복하면 0번째 행들의 index에 계산된 값들이 할당되어 있을 테니</li><li>0 번째 행 중에서 가장 큰 값을 return한다.</li><li>끝</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><h3 id="정확성"><a href="#정확성" class="headerlink" title="정확성"></a>정확성</h3><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (1.05ms, 51.1MB)</td></tr><tr><td>테스트 2</td><td>통과 (1.16ms, 52.7MB)</td></tr><tr><td>테스트 3</td><td>통과 (1.16ms, 50.8MB)</td></tr><tr><td>테스트 4</td><td>통과 (1.18ms, 53MB)</td></tr><tr><td>테스트 5</td><td>통과 (1.18ms, 52.7MB)</td></tr><tr><td>테스트 6</td><td>통과 (1.14ms, 52.9MB)</td></tr><tr><td>테스트 7</td><td>통과 (1.18ms, 51.4MB)</td></tr><tr><td>테스트 8</td><td>통과 (1.13ms, 52.7MB)</td></tr><tr><td>테스트 9</td><td>통과 (1.25ms, 53.3MB)</td></tr><tr><td>테스트 10</td><td>통과 (1.21ms, 50.7MB)</td></tr><tr><td>테스트 11</td><td>통과 (1.18ms, 52.4MB)</td></tr><tr><td>테스트 12</td><td>통과 (4.25ms, 52.5MB)</td></tr><tr><td>테스트 13</td><td>통과 (1.19ms, 53.2MB)</td></tr><tr><td>테스트 14</td><td>통과 (1.16ms, 53.1MB)</td></tr><tr><td>테스트 15</td><td>통과 (1.19ms, 51MB)</td></tr><tr><td>테스트 16</td><td>통과 (1.16ms, 52.5MB)</td></tr><tr><td>테스트 17</td><td>통과 (1.14ms, 55.3MB)</td></tr><tr><td>테스트 18</td><td>통과 (1.16ms, 52.2MB)</td></tr></tbody></table><h3 id="효율성"><a href="#효율성" class="headerlink" title="효율성"></a>효율성</h3><table><thead><tr><th>번호</th><th>속도</th></tr></thead><tbody><tr><td>테스트 1</td><td>통과 (28.10ms, 94.3MB)</td></tr><tr><td>테스트 2</td><td>통과 (28.01ms, 95.7MB)</td></tr><tr><td>테스트 3</td><td>통과 (25.28ms, 97.6MB)</td></tr><tr><td>테스트 4</td><td>통과 (25.93ms, 101MB)</td></tr></tbody></table><hr><h2 id="테스트-케이스"><a href="#테스트-케이스" class="headerlink" title="테스트 케이스"></a>테스트 케이스</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">assertEquals(<span class="number">16</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;,&#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;,&#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">20</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>&#125;, &#123;<span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">115</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;, &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;, &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">100</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">8</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">33</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;, &#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">11</span>&#125;, &#123;<span class="number">16</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="number">13</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">409</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>, <span class="number">100</span>, <span class="number">15</span>, <span class="number">3</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">100</span>, <span class="number">99</span>, <span class="number">98</span>, <span class="number">97</span>&#125;, &#123;<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>, <span class="number">100</span>&#125;, &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>&#125;, &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">16</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">9</span>&#125;, &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">125</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">9</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">7</span>&#125;, &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">1</span>&#125;, &#123;<span class="number">100</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">1</span>&#125;&#125;));</span><br><span class="line">assertEquals(<span class="number">20</span>, test.solution(<span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;&#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>&#125;, &#123;<span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>, <span class="number">4</span>&#125;, &#123;<span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>&#125;&#125;));</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12913&quot;&gt;htt</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="프로그래머스" scheme="https://jungguji.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/"/>
    
    <category term="다이나믹 프로그래밍" scheme="https://jungguji.github.io/tags/%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
  </entry>
  
</feed>
